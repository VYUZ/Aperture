@charset "UTF-8";html{-webkit-box-sizing:border-box;box-sizing:border-box;scroll-behavior:smooth}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol[class],ul[class]{padding:0}blockquote,body,dd,dl,figcaption,figure,h1,h2,h3,h4,li,ol[class],p,ul[class]{margin:0}body{padding:0;min-height:100vh;scroll-behavior:smooth;-webkit-transition:all .5s linear 0s;-o-transition:all .5s linear 0s;transition:all .5s linear 0s;text-rendering:optimizeSpeed;line-height:1.5;font:400 14px/20px "Poppins",sans-serif;color:#fff}ol[class],ul[class]{list-style:none}a{text-decoration:none}a:not([class]){-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto}img{max-width:100%;height:auto;display:block}article>*+*{margin-top:1em}button,input,select,textarea{font:inherit}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:"Poppins";font-style:normal;font-weight:400;src:local(""),url(/font/poppins-v20-latin-regular.woff2) format("woff2"),url(/font/poppins-v20-latin-regular.woff) format("woff")}.container{max-width:1200px;width:100%;padding:0 8px;margin:0 auto}h1,h2,h3{text-align:center}h1{font-size:54px;line-height:59px}h2{font-size:40px;line-height:42px}h3{font-size:23px;line-height:30px;color:silver}.extra-list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-item-align:end;align-self:flex-end}.extra-item{margin-left:16px;font-size:12px;line-height:12}.extra-item::before{content:"";margin-right:10px;display:inline-block;vertical-align:middle}.extra-item-1::before{background:url(/img/svg/extra-img-1.svg) center center/cover no-repeat;width:16px;height:16px}.extra-item-2::before{background:url(/img/svg/extra-img-2.svg) center center/cover no-repeat;width:16px;height:16px}.extra-item-3::before{background:url(/img/svg/extra-img-3.svg) center center/cover no-repeat;width:32px;height:16px}.extra-item-4::before{background:url(/img/svg/extra-img-4.svg) center center/cover no-repeat;width:10px;height:16px}.header{background:#181818;position:fixed;top:0;left:0;width:100%;z-index:3}.header__container,.header__nav-list{display:-webkit-box;display:-ms-flexbox;display:flex}.header__container{padding-top:20px;padding-bottom:20px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__nav-list{-ms-flex-wrap:wrap;flex-wrap:wrap;gap:30px}.header__nav-item:last-child .header__nav-link{background:#fff;padding:10px 15px;color:#000;border-radius:10px}.header__nav-link{color:#fff}.header__burger{display:-webkit-box;display:-ms-flexbox;display:flex;display:none;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:30px;height:30px;gap:5px;cursor:pointer;overflow:hidden}.burger__line{background:#fff;width:24px;border:solid 1px #fff;-webkit-transition:all .5s;-o-transition:all .5s;transition:all .5s}.burger__line-middle{width:18px}.hero{background:url(../../img/hero_img.jpg) center center/cover no-repeat fixed #000;height:calc(100vh - 90px);padding-bottom:41px}.hero__container,p.footer__copyright{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hero__container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;height:100%}.hero__subtitle{margin-bottom:1px;font-weight:400}.hero__title{margin-bottom:18px}.hero__desc{color:silver;margin-bottom:14px;max-width:50%;text-align:center}p.footer__copyright{height:10vh;background:rgba(0,0,0,.9);font-weight:400;font-size:12px;line-height:12px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;text-align:center;color:rgba(255,255,255,.5)}p.footer__copyright span{font-weight:700}@media (prefers-reduced-motion:reduce){*{-webkit-animation-duration:.01ms!important;animation-duration:.01ms!important;-webkit-animation-iteration-count:1!important;animation-iteration-count:1!important;-webkit-transition-duration:.01ms!important;-o-transition-duration:.01ms!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}@supports (-webkit-appearance:none){.extra-item-1::before{background:url(/img/svg/extra-img-1.svg) center center/cover no-repeat}.extra-item-2::before{background:url(/img/svg/extra-img-2.svg) center center/cover no-repeat}.extra-item-3::before{background:url(/img/svg/extra-img-3.svg) center center/cover no-repeat}.extra-item-4::before{background:url(/img/svg/extra-img-4.svg) center center/cover no-repeat}.hero{background:url(../../img/hero_img.webp) center center/cover no-repeat fixed #000}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */