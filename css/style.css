@charset "UTF-8";

/* Указываем box sizing */

html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  scroll-behavior: smooth;
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
}

/* HTML5 display-role reset for older browsers */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

/* Убираем внутренние отступы */

ul[class],
ol[class] {
  padding: 0;
}

/* Убираем внешние отступы */

body,
h1,
h2,
h3,
h4,
p,
ul[class],
ol[class],
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0;
}

/* Выставляем основные настройки по-умолчанию для body */

body {
  padding: 0;
  min-height: 100vh;
  scroll-behavior: smooth;
  -webkit-transition: all 0.5s linear 0s;
  -o-transition: all 0.5s linear 0s;
  transition: all 0.5s linear 0s;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* Удаляем стандартную стилизацию для всех ul и il, у которых есть атрибут class*/

ul[class],
ol[class] {
  list-style: none;
}

a {
  text-decoration: none;
}

/* Элементы a, у которых нет класса, сбрасываем до дефолтных стилей */

a:not([class]) {
  -webkit-text-decoration-skip: ink;
  text-decoration-skip-ink: auto;
}

/* Упрощаем работу с изображениями */

img {
  max-width: 100%;
  height: auto;
  display: block;
}

/* Указываем понятную периодичность в потоке данных у article*/

article > * + * {
  margin-top: 1em;
}

/* Наследуем шрифты для инпутов и кнопок */

input,
button,
textarea,
select {
  font: inherit;
}

/* Удаляем все анимации и переходы для людей, которые предпочитай их не использовать */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/*End normalising*/

/*Variables*/

/* poppins-regular - latin */

@font-face {
  font-family: "Poppins";
  font-style: normal;
  font-weight: 400;
  src: local(""), url("/font/poppins-v20-latin-regular.woff2") format("woff2"), url("/font/poppins-v20-latin-regular.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}

/* общие стили */

body {
  font: normal 400 14px/20px "Poppins", sans-serif;
  color: #ffffff;
}

.container {
  max-width: 1200px;
  width: 100%;
  padding: 0 8px;
  margin: 0 auto;
}

h1,
h2,
h3 {
  text-align: center;
}

h1 {
  font-size: 54px;
  line-height: 59px;
}

h2 {
  font-size: 40px;
  line-height: 42px;
}

h3 {
  font-size: 23px;
  line-height: 30px;
  color: #C0C0C0;
}

.extra-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-item-align: end;
  align-self: flex-end;
}

.extra-item {
  margin-left: 16px;
  font-size: 12px;
  line-height: 12;
}

.extra-item::before {
  content: "";
  margin-right: 10px;
  display: inline-block;
  vertical-align: middle;
}

.extra-item-1::before {
  background: url("/img/svg/extra-img-1.svg") center center/cover no-repeat;
  width: 16px;
  height: 16px;
}

.extra-item-2::before {
  background: url("/img/svg/extra-img-2.svg") center center/cover no-repeat;
  width: 16px;
  height: 16px;
}

.extra-item-3::before {
  background: url("/img/svg/extra-img-3.svg") center center/cover no-repeat;
  width: 32px;
  height: 16px;
}

.extra-item-4::before {
  background: url("/img/svg/extra-img-4.svg") center center/cover no-repeat;
  width: 10px;
  height: 16px;
}

/* HEADER START */

.header {
  background: #181818;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 3;
}

.header__container {
  padding-top: 20px;
  padding-bottom: 20px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.header__nav-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  gap: 30px;
}

.header__nav-item:last-child .header__nav-link {
  background: #fff;
  padding: 10px 15px;
  color: #000;
  border-radius: 10px;
}

.header__nav-link {
  color: rgb(255, 255, 255);
}

.header__burger {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  display: none;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 30px;
  height: 30px;
  gap: 5px;
  cursor: pointer;
  overflow: hidden;
}

.burger__line {
  background: #fff;
  width: 24px;
  border: solid 1px white;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

.burger__line-middle {
  width: 18px;
}

/* HEADER END */

/* MAIN START */

/* MAIN START */

/* HERO START */

.hero {
  background: url("../../img/hero_img.jpg") center center/cover no-repeat fixed #000000;
  height: calc(100vh - 90px);
  padding-bottom: 41px;
}

.hero__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 100%;
}

.hero__subtitle {
  margin-bottom: 1px;
  font-weight: normal;
}

.hero__title {
  margin-bottom: 18px;
}

.hero__desc {
  color: #c0c0c0;
  margin-bottom: 14px;
  max-width: 50%;
  text-align: center;
}

/* HERO END */

/* INTRO START */

/* INTRO END */

/* INTRO START */

/* INTRO END */

/* INTRO START */

/* INTRO END */

/* MAIN END */

/* MAIN END */

/* FOOTER START */

/* FOOTER START */

p.footer__copyright {
  height: 10vh;
  background: rgba(0, 0, 0, 0.9);
  font-weight: 400;
  font-size: 12px;
  line-height: 12px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  color: rgba(255, 255, 255, 0.5);
}

p.footer__copyright span {
  font-weight: 700;
}

/* FOOTER END */

/* FOOTER END */

/* @media */

/* @media */

/* @media */

/* @media */

/* @media */

/* @media */

/* @media */

/* @media */

@media (prefers-reduced-motion: reduce) {
  * {
    -webkit-animation-duration: 0.01ms !important;
    animation-duration: 0.01ms !important;
    -webkit-animation-iteration-count: 1 !important;
    animation-iteration-count: 1 !important;
    -webkit-transition-duration: 0.01ms !important;
    -o-transition-duration: 0.01ms !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@supports (-webkit-appearance:none){
.extra-item-1::before{background:url("/img/svg/extra-img-1.svg") center center/cover no-repeat}
.extra-item-2::before{background:url("/img/svg/extra-img-2.svg") center center/cover no-repeat}
.extra-item-3::before{background:url("/img/svg/extra-img-3.svg") center center/cover no-repeat}
.extra-item-4::before{background:url("/img/svg/extra-img-4.svg") center center/cover no-repeat}
.hero{background:url("../../img/hero_img.webp") center center/cover no-repeat fixed #000000}
}

 @media (prefers-reduced-motion: reduce){

@supports (-webkit-appearance:none){

}

}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsImJsb2NrL19zdGFydC5zY3NzIiwiYmxvY2svX3ZhcnMuc2NzcyIsImJsb2NrL19mb250LnNjc3MiLCJzdHlsZS5zY3NzIiwiYmxvY2svX2hlYWRlci5zY3NzIiwiYmxvY2svX21haW4uc2NzcyIsImJsb2NrL19mb290ZXIuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUNBaEIseUJBQUE7QUFDQTtFQUNFLDhCQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtBREVGOztBQ0FBOzs7RUFHRSwyQkFBQTtFQUNBLG1CQUFBO0FER0Y7O0FDQUEsZ0RBQUE7QUFDQTs7Ozs7Ozs7Ozs7RUFXRSxjQUFBO0FER0Y7O0FDQUEsK0JBQUE7QUFDQTs7RUFFRSxVQUFBO0FER0Y7O0FDQUEsNEJBQUE7QUFDQTs7Ozs7Ozs7Ozs7Ozs7RUFjRSxTQUFBO0FER0Y7O0FDQUEsd0RBQUE7QUFDQTtFQUNFLFVBQUE7RUFDQSxpQkFBQTtFQUNBLHVCQUFBO0VBQ0Esc0NBQUE7RUFBQSxpQ0FBQTtFQUFBLDhCQUFBO0VBQ0EsNkJBQUE7RUFDQSxnQkFBQTtBREdGOztBQ0FBLGlGQUFBO0FBQ0E7O0VBRUUsZ0JBQUE7QURHRjs7QUNBQTtFQUNFLHFCQUFBO0FER0Y7O0FDQUEscUVBQUE7QUFDQTtFQUNFLGlDQUFBO0VBQUEsOEJBQUE7QURHRjs7QUNBQSxvQ0FBQTtBQUNBO0VBQ0UsZUFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FER0Y7O0FDQUEsOERBQUE7QUFDQTtFQUNFLGVBQUE7QURHRjs7QUNBQSwwQ0FBQTtBQUNBOzs7O0VBSUUsYUFBQTtBREdGOztBQ0FBLHNGQUFBO0FBQ0E7RUFDRTtJQUNFLDZDQUFBO0lBQUEscUNBQUE7SUFDQSwrQ0FBQTtJQUFBLHVDQUFBO0lBQ0EsOENBQUE7SUFBQSx5Q0FBQTtJQUFBLHNDQUFBO0lBQ0EsZ0NBQUE7RURHRjtBQUNGO0FDQUE7RUFDRSx5QkFBQTtFQUNBLGlCQUFBO0FERUY7O0FDQUEs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Q0EsZ0JBQUE7QUFDQSxjQUFBO0FBQ0EsZ0JBQUE7QUFDQSxjQUFBO0FBRUEsYUFBQTtBRmdGQSxhQUFBO0FBRUEsaUJBQUE7QUc1SEEsaUJBQUE7QUFDQTtFQUNFLFlBQUE7RUFDQSw4QkFBQTtFQUNBLGdCQUFBO0VBSUEsZUFBQTtFQUNBLGlCQUFBO0VBQ0Esb0JBQUE7RUFBQSxvQkFBQTtFQUFBLGFBQUE7RUFDQSx3QkFBQTtFQUFBLHFCQUFBO0VBQUEsdUJBQUE7RUFDQSx5QkFBQTtFQUFBLHNCQUFBO0VBQUEsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLCtCQUFBO0FQaVRGO0FPMVRFO0VBQ0UsZ0JBQUE7QVA0VEo7O0FPbFRBLGVBQUE7QUhnSEEsZUFBQTtBQUVBLFdBQUE7QUFDQSxXQUFBO0FBQ0EsV0FBQTtBQUNBLFdBQUE7QUFDQSxXQUFBO0FBQ0EsV0FBQTtBQUNBLFdBQUE7QUFDQSxXQUFBIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qINCj0LrQsNC30YvQstCw0LXQvCBib3ggc2l6aW5nICovXG5odG1sIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBpbmhlcml0O1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qINCj0LHQuNGA0LDQtdC8INCy0L3Rg9GC0YDQtdC90L3QuNC1INC+0YLRgdGC0YPQv9GLICovXG51bFtjbGFzc10sXG5vbFtjbGFzc10ge1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKiDQo9Cx0LjRgNCw0LXQvCDQstC90LXRiNC90LjQtSDQvtGC0YHRgtGD0L/RiyAqL1xuYm9keSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxucCxcbnVsW2NsYXNzXSxcbm9sW2NsYXNzXSxcbmxpLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmJsb2NrcXVvdGUsXG5kbCxcbmRkIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiDQktGL0YHRgtCw0LLQu9GP0LXQvCDQvtGB0L3QvtCy0L3Ri9C1INC90LDRgdGC0YDQvtC50LrQuCDQv9C+LdGD0LzQvtC70YfQsNC90LjRjiDQtNC70Y8gYm9keSAqL1xuYm9keSB7XG4gIHBhZGRpbmc6IDA7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXMgbGluZWFyIDBzO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVTcGVlZDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuLyog0KPQtNCw0LvRj9C10Lwg0YHRgtCw0L3QtNCw0YDRgtC90YPRjiDRgdGC0LjQu9C40LfQsNGG0LjRjiDQtNC70Y8g0LLRgdC10YUgdWwg0LggaWwsINGDINC60L7RgtC+0YDRi9GFINC10YHRgtGMINCw0YLRgNC40LHRg9GCIGNsYXNzKi9cbnVsW2NsYXNzXSxcbm9sW2NsYXNzXSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi8qINCt0LvQtdC80LXQvdGC0YsgYSwg0YMg0LrQvtGC0L7RgNGL0YUg0L3QtdGCINC60LvQsNGB0YHQsCwg0YHQsdGA0LDRgdGL0LLQsNC10Lwg0LTQviDQtNC10YTQvtC70YLQvdGL0YUg0YHRgtC40LvQtdC5ICovXG5hOm5vdChbY2xhc3NdKSB7XG4gIHRleHQtZGVjb3JhdGlvbi1za2lwLWluazogYXV0bztcbn1cblxuLyog0KPQv9GA0L7RidCw0LXQvCDRgNCw0LHQvtGC0YMg0YEg0LjQt9C+0LHRgNCw0LbQtdC90LjRj9C80LggKi9cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyog0KPQutCw0LfRi9Cy0LDQtdC8INC/0L7QvdGP0YLQvdGD0Y4g0L/QtdGA0LjQvtC00LjRh9C90L7RgdGC0Ywg0LIg0L/QvtGC0L7QutC1INC00LDQvdC90YvRhSDRgyBhcnRpY2xlKi9cbmFydGljbGUgPiAqICsgKiB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cblxuLyog0J3QsNGB0LvQtdC00YPQtdC8INGI0YDQuNGE0YLRiyDQtNC70Y8g0LjQvdC/0YPRgtC+0LIg0Lgg0LrQvdC+0L/QvtC6ICovXG5pbnB1dCxcbmJ1dHRvbixcbnRleHRhcmVhLFxuc2VsZWN0IHtcbiAgZm9udDogaW5oZXJpdDtcbn1cblxuLyog0KPQtNCw0LvRj9C10Lwg0LLRgdC1INCw0L3QuNC80LDRhtC40Lgg0Lgg0L/QtdGA0LXRhdC+0LTRiyDQtNC70Y8g0LvRjtC00LXQuSwg0LrQvtGC0L7RgNGL0LUg0L/RgNC10LTQv9C+0YfQuNGC0LDQuSDQuNGFINC90LUg0LjRgdC/0L7Qu9GM0LfQvtCy0LDRgtGMICovXG5AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSkge1xuICAqIHtcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuMDFtcyAhaW1wb3J0YW50O1xuICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDEgIWltcG9ydGFudDtcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjAxbXMgIWltcG9ydGFudDtcbiAgICBzY3JvbGwtYmVoYXZpb3I6IGF1dG8gIWltcG9ydGFudDtcbiAgfVxufVxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuLypFbmQgbm9ybWFsaXNpbmcqL1xuLypWYXJpYWJsZXMqL1xuLyogcG9wcGlucy1yZWd1bGFyIC0gbGF0aW4gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJQb3BwaW5zXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiBsb2NhbChcIlwiKSwgdXJsKFwiL2ZvbnQvcG9wcGlucy12MjAtbGF0aW4tcmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL2ZvbnQvcG9wcGlucy12MjAtbGF0aW4tcmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIC8qIENocm9tZSA2KywgRmlyZWZveCAzLjYrLCBJRSA5KywgU2FmYXJpIDUuMSsgKi9cbn1cbi8qINC+0LHRidC40LUg0YHRgtC40LvQuCAqL1xuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBcIlBvcHBpbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cblxuLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTIwMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMCA4cHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG5oMSxcbmgyLFxuaDMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmgxIHtcbiAgZm9udC1zaXplOiA1NHB4O1xuICBsaW5lLWhlaWdodDogNTlweDtcbn1cblxuaDIge1xuICBmb250LXNpemU6IDQwcHg7XG4gIGxpbmUtaGVpZ2h0OiA0MnB4O1xufVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogMjNweDtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIGNvbG9yOiAjQzBDMEMwO1xufVxuXG4uZXh0cmEtbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG59XG5cbi5leHRyYS1pdGVtIHtcbiAgbWFyZ2luLWxlZnQ6IDE2cHg7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgbGluZS1oZWlnaHQ6IDEyO1xufVxuXG4uZXh0cmEtaXRlbTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5leHRyYS1pdGVtLTE6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQ6IHVybChcIi9pbWcvc3ZnL2V4dHJhLWltZy0xLnN2Z1wiKSBjZW50ZXIgY2VudGVyL2NvdmVyIG5vLXJlcGVhdDtcbiAgd2lkdGg6IDE2cHg7XG4gIGhlaWdodDogMTZweDtcbn1cblxuLmV4dHJhLWl0ZW0tMjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiL2ltZy9zdmcvZXh0cmEtaW1nLTIuc3ZnXCIpIGNlbnRlciBjZW50ZXIvY292ZXIgbm8tcmVwZWF0O1xuICB3aWR0aDogMTZweDtcbiAgaGVpZ2h0OiAxNnB4O1xufVxuXG4uZXh0cmEtaXRlbS0zOjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIvaW1nL3N2Zy9leHRyYS1pbWctMy5zdmdcIikgY2VudGVyIGNlbnRlci9jb3ZlciBuby1yZXBlYXQ7XG4gIHdpZHRoOiAzMnB4O1xuICBoZWlnaHQ6IDE2cHg7XG59XG5cbi5leHRyYS1pdGVtLTQ6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQ6IHVybChcIi9pbWcvc3ZnL2V4dHJhLWltZy00LnN2Z1wiKSBjZW50ZXIgY2VudGVyL2NvdmVyIG5vLXJlcGVhdDtcbiAgd2lkdGg6IDEwcHg7XG4gIGhlaWdodDogMTZweDtcbn1cblxuLyogSEVBREVSIFNUQVJUICovXG4uaGVhZGVyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiAzO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTgxODE4O1xufVxuXG4uaGVhZGVyX19jb250YWluZXIge1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmhlYWRlcl9fbmF2LWxpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGdhcDogMzBweDtcbn1cblxuLmhlYWRlcl9fbmF2LWl0ZW06bGFzdC1jaGlsZCAuaGVhZGVyX19uYXYtbGluayB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHBhZGRpbmc6IDEwcHggMTVweDtcbiAgY29sb3I6ICMwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbi5oZWFkZXJfX25hdi1saW5rIHtcbiAgY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcbn1cblxuLmhlYWRlcl9fYnVyZ2VyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZGlzcGxheTogbm9uZTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIGdhcDogNXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5idXJnZXJfX2xpbmUge1xuICB3aWR0aDogMjRweDtcbiAgYm9yZGVyOiBzb2xpZCAxcHggd2hpdGU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzO1xufVxuXG4uYnVyZ2VyX19saW5lLW1pZGRsZSB7XG4gIHdpZHRoOiAxOHB4O1xufVxuXG4vKiBIRUFERVIgRU5EICovXG4vKiBNQUlOIFNUQVJUICovXG4vKiBNQUlOIFNUQVJUICovXG4vKiBIRVJPIFNUQVJUICovXG4uaGVybyB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uLy4uL2ltZy9oZXJvX2ltZy5qcGdcIikgY2VudGVyIGNlbnRlci9jb3ZlciBuby1yZXBlYXQgZml4ZWQgIzAwMDAwMDtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gOTBweCk7XG4gIHBhZGRpbmctYm90dG9tOiA0MXB4O1xufVxuXG4uaGVyb19fY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uaGVyb19fc3VidGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAxcHg7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbi5oZXJvX190aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IDE4cHg7XG59XG5cbi5oZXJvX19kZXNjIHtcbiAgY29sb3I6ICNjMGMwYzA7XG4gIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gIG1heC13aWR0aDogNTAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi8qIEhFUk8gRU5EICovXG4vKiBJTlRSTyBTVEFSVCAqL1xuLyogSU5UUk8gRU5EICovXG4vKiBJTlRSTyBTVEFSVCAqL1xuLyogSU5UUk8gRU5EICovXG4vKiBJTlRSTyBTVEFSVCAqL1xuLyogSU5UUk8gRU5EICovXG4vKiBNQUlOIEVORCAqL1xuLyogTUFJTiBFTkQgKi9cbi8qIEZPT1RFUiBTVEFSVCAqL1xuLyogRk9PVEVSIFNUQVJUICovXG5wLmZvb3Rlcl9fY29weXJpZ2h0IHtcbiAgaGVpZ2h0OiAxMHZoO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuOSk7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgbGluZS1oZWlnaHQ6IDEycHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG59XG5wLmZvb3Rlcl9fY29weXJpZ2h0IHNwYW4ge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4vKiBGT09URVIgRU5EICovXG4vKiBGT09URVIgRU5EICovXG4vKiBAbWVkaWEgKi9cbi8qIEBtZWRpYSAqL1xuLyogQG1lZGlhICovXG4vKiBAbWVkaWEgKi9cbi8qIEBtZWRpYSAqL1xuLyogQG1lZGlhICovXG4vKiBAbWVkaWEgKi9cbi8qIEBtZWRpYSAqLyIsIi8qINCj0LrQsNC30YvQstCw0LXQvCBib3ggc2l6aW5nICovXHJcbmh0bWwge1xyXG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xyXG59XHJcbiosXHJcbio6OmJlZm9yZSxcclxuKjo6YWZ0ZXIge1xyXG4gIC13ZWJraXQtYm94LXNpemluZzogaW5oZXJpdDtcclxuICBib3gtc2l6aW5nOiBpbmhlcml0O1xyXG59XHJcblxyXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXHJcbmFydGljbGUsXHJcbmFzaWRlLFxyXG5kZXRhaWxzLFxyXG5maWdjYXB0aW9uLFxyXG5maWd1cmUsXHJcbmZvb3RlcixcclxuaGVhZGVyLFxyXG5oZ3JvdXAsXHJcbm1lbnUsXHJcbm5hdixcclxuc2VjdGlvbiB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi8qINCj0LHQuNGA0LDQtdC8INCy0L3Rg9GC0YDQtdC90L3QuNC1INC+0YLRgdGC0YPQv9GLICovXHJcbnVsW2NsYXNzXSxcclxub2xbY2xhc3NdIHtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKiDQo9Cx0LjRgNCw0LXQvCDQstC90LXRiNC90LjQtSDQvtGC0YHRgtGD0L/RiyAqL1xyXG5ib2R5LFxyXG5oMSxcclxuaDIsXHJcbmgzLFxyXG5oNCxcclxucCxcclxudWxbY2xhc3NdLFxyXG5vbFtjbGFzc10sXHJcbmxpLFxyXG5maWd1cmUsXHJcbmZpZ2NhcHRpb24sXHJcbmJsb2NrcXVvdGUsXHJcbmRsLFxyXG5kZCB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKiDQktGL0YHRgtCw0LLQu9GP0LXQvCDQvtGB0L3QvtCy0L3Ri9C1INC90LDRgdGC0YDQvtC50LrQuCDQv9C+LdGD0LzQvtC70YfQsNC90LjRjiDQtNC70Y8gYm9keSAqL1xyXG5ib2R5IHtcclxuICBwYWRkaW5nOiAwO1xyXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjVzIGxpbmVhciAwcztcclxuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVTcGVlZDtcclxuICBsaW5lLWhlaWdodDogMS41O1xyXG59XHJcblxyXG4vKiDQo9C00LDQu9GP0LXQvCDRgdGC0LDQvdC00LDRgNGC0L3Rg9GOINGB0YLQuNC70LjQt9Cw0YbQuNGOINC00LvRjyDQstGB0LXRhSB1bCDQuCBpbCwg0YMg0LrQvtGC0L7RgNGL0YUg0LXRgdGC0Ywg0LDRgtGA0LjQsdGD0YIgY2xhc3MqL1xyXG51bFtjbGFzc10sXHJcbm9sW2NsYXNzXSB7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuYSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG4vKiDQrdC70LXQvNC10L3RgtGLIGEsINGDINC60L7RgtC+0YDRi9GFINC90LXRgiDQutC70LDRgdGB0LAsINGB0LHRgNCw0YHRi9Cy0LDQtdC8INC00L4g0LTQtdGE0L7Qu9GC0L3Ri9GFINGB0YLQuNC70LXQuSAqL1xyXG5hOm5vdChbY2xhc3NdKSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rOiBhdXRvO1xyXG59XHJcblxyXG4vKiDQo9C/0YDQvtGJ0LDQtdC8INGA0LDQsdC+0YLRgyDRgSDQuNC30L7QsdGA0LDQttC10L3QuNGP0LzQuCAqL1xyXG5pbWcge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi8qINCj0LrQsNC30YvQstCw0LXQvCDQv9C+0L3Rj9GC0L3Rg9GOINC/0LXRgNC40L7QtNC40YfQvdC+0YHRgtGMINCyINC/0L7RgtC+0LrQtSDQtNCw0L3QvdGL0YUg0YMgYXJ0aWNsZSovXHJcbmFydGljbGUgPiAqICsgKiB7XHJcbiAgbWFyZ2luLXRvcDogMWVtO1xyXG59XHJcblxyXG4vKiDQndCw0YHQu9C10LTRg9C10Lwg0YjRgNC40YTRgtGLINC00LvRjyDQuNC90L/Rg9GC0L7QsiDQuCDQutC90L7Qv9C+0LogKi9cclxuaW5wdXQsXHJcbmJ1dHRvbixcclxudGV4dGFyZWEsXHJcbnNlbGVjdCB7XHJcbiAgZm9udDogaW5oZXJpdDtcclxufVxyXG5cclxuLyog0KPQtNCw0LvRj9C10Lwg0LLRgdC1INCw0L3QuNC80LDRhtC40Lgg0Lgg0L/QtdGA0LXRhdC+0LTRiyDQtNC70Y8g0LvRjtC00LXQuSwg0LrQvtGC0L7RgNGL0LUg0L/RgNC10LTQv9C+0YfQuNGC0LDQuSDQuNGFINC90LUg0LjRgdC/0L7Qu9GM0LfQvtCy0LDRgtGMICovXHJcbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKSB7XHJcbiAgKiB7XHJcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuMDFtcyAhaW1wb3J0YW50O1xyXG4gICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMSAhaW1wb3J0YW50O1xyXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4wMW1zICFpbXBvcnRhbnQ7XHJcbiAgICBzY3JvbGwtYmVoYXZpb3I6IGF1dG8gIWltcG9ydGFudDtcclxuICB9XHJcbn1cclxuXHJcbnRhYmxlIHtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xyXG59XHJcbi8qRW5kIG5vcm1hbGlzaW5nKi9cclxuIiwiLypWYXJpYWJsZXMqL1xyXG4vLyAkZmEtZm9udC1wYXRoOiBcIi4uL2ZvbnQvZm9udGF3ZXNvbWUvd2ViZm9udHNcIjtcclxuJG15Z3JheTogI0MwQzBDMDtcclxuJGJnLWNvbG9yOiAjMDAwMDAwO1xyXG4kZ2FwOiAxNnB4O1xyXG4vLyAkY29sOiAxMjtcclxuLy8gJGNvbC0xOiAwIDEgY2FsYygxMDAlIC8gI3skY29sfSAqIDEgLSAjeyRnYXB9KTtcclxuLy8gJGNvbC0zOiAwIDEgY2FsYygxMDAlIC8gI3skY29sfSAqIDMgLSAjeyRnYXB9KTtcclxuLy8gJGNvbC00OiAwIDEgY2FsYygxMDAlIC8gI3skY29sfSAqIDQgLSAjeyRnYXB9KTtcclxuLy8gJGNvbC01OiAwIDEgY2FsYygxMDAlIC8gI3skY29sfSAqIDUgLSAjeyRnYXB9KTtcclxuLy8gJGNvbC02OiAwIDEgY2FsYygxMDAlIC8gI3skY29sfSAqIDYgLSAjeyRnYXB9KTtcclxuLy8gJGNvbC04OiAwIDEgY2FsYygxMDAlIC8gI3skY29sfSAqIDggLSAjeyRnYXB9KTtcclxuLy8gJGNvbC0xMjogMCAxIGNhbGMoMTAwJSAvICN7JGNvbH0gKiAxMiAtICN7JGdhcH0pO1xyXG5cclxuQG1peGluIG0xMzAwIHtcclxuICBAbWVkaWEgKG1heC13aWR0aDogMTMwMHB4KSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuQG1peGluIG04MDAge1xyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcbiIsIi8qIHBvcHBpbnMtcmVndWxhciAtIGxhdGluICovXHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiBcIlBvcHBpbnNcIjtcclxuICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBzcmM6IGxvY2FsKFwiXCIpLCB1cmwoXCIvZm9udC9wb3BwaW5zLXYyMC1sYXRpbi1yZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLFxyXG4gICAgLyogQ2hyb21lIDI2KywgT3BlcmEgMjMrLCBGaXJlZm94IDM5KyAqLyB1cmwoXCIvZm9udC9wb3BwaW5zLXYyMC1sYXRpbi1yZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTsgLyogQ2hyb21lIDYrLCBGaXJlZm94IDMuNissIElFIDkrLCBTYWZhcmkgNS4xKyAqL1xyXG59XHJcblxyXG4vLyBAaW1wb3J0IFwiLi4vLi4vZm9udC9mb250YXdlc29tZS9zY3NzL2ZvbnRhd2Vzb21lLnNjc3NcIjtcclxuLy8gQGltcG9ydCBcIi4uLy4uL2ZvbnQvZm9udGF3ZXNvbWUvc2Nzcy9icmFuZHMuc2Nzc1wiO1xyXG4vLyBAaW1wb3J0IFwiLi4vLi4vZm9udC9mb250YXdlc29tZS9zY3NzL3NvbGlkLnNjc3NcIjtcclxuIiwiLy8gQHVzZSBcInNhc3M6bWF0aFwiO1xyXG5cclxuQGltcG9ydCBcImJsb2NrL3N0YXJ0XCI7XHJcbkBpbXBvcnQgXCJibG9jay92YXJzXCI7XHJcbkBpbXBvcnQgXCJibG9jay9mb250XCI7XHJcblxyXG4vKiDQvtCx0YnQuNC1INGB0YLQuNC70LggKi9cclxuXHJcbmJvZHkge1xyXG4gIGZvbnQtZmFtaWx5OiBcIlBvcHBpbnNcIiwgc2Fucy1zZXJpZjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgLy8gbGV0dGVyLXNwYWNpbmc6IDBlbTtcclxuICBjb2xvcjogI2ZmZmZmZjtcclxufVxyXG4uY29udGFpbmVyIHtcclxuICBtYXgtd2lkdGg6IDEyMDBweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiAwICRnYXAgKiAwLjU7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgLy8gQGluY2x1ZGUgbTEzMDAge1xyXG4gIC8vICAgbWF4LXdpZHRoOiAxMjAwcHg7XHJcbiAgLy8gfVxyXG59XHJcbi8vIC5yb3cge1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgZmxleC13cmFwOiB3cmFwO1xyXG4vLyAgIGdhcDogJGdhcDtcclxuLy8gICBtYXJnaW4tbGVmdDogLSRnYXAgKiAwLjU7XHJcbi8vICAgbWFyZ2luLXJpZ2h0OiAtJGdhcCAqIDAuNTtcclxuLy8gfVxyXG4vLyAuY29sIHtcclxuLy8gICBtYXJnaW46IDAgJGdhcCAqIDAuNTtcclxuLy8gfVxyXG5oMSxcclxuaDIsXHJcbmgzIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuaDEge1xyXG4gIGZvbnQtc2l6ZTogNTRweDtcclxubGluZS1oZWlnaHQ6IDU5cHg7XHJcbiAgLy8gQGluY2x1ZGUgbTEzMDAge1xyXG4gIC8vICAgZm9udC1zaXplOiA4dnc7XHJcbiAgLy8gfVxyXG4gIC8vIEBpbmNsdWRlIG04MDAge1xyXG4gIC8vICAgZm9udC1zaXplOiA2dnc7XHJcbiAgLy8gfVxyXG59XHJcblxyXG5oMiB7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiA0MnB4O1xyXG59XHJcblxyXG5oMyB7XHJcbiAgZm9udC1zaXplOiAyM3B4O1xyXG5saW5lLWhlaWdodDogMzBweDtcclxuY29sb3I6JG15Z3JheTtcclxufVxyXG5cclxuLmV4dHJhLWxpc3Qge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG59XHJcbi5leHRyYS1pdGVtIHtcclxuICBtYXJnaW4tbGVmdDogMTZweDtcclxuICBmb250LXNpemU6IDEycHg7XHJcbiAgbGluZS1oZWlnaHQ6IDEyO1xyXG59XHJcblxyXG4uZXh0cmEtaXRlbTo6YmVmb3JlIHtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIG1hcmdpbi1yaWdodDogMTBweDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuLmV4dHJhLWl0ZW0tMSB7XHJcbiAgJjo6YmVmb3JlIHtcclxuICAgIGJhY2tncm91bmQ6IHVybChcIi9pbWcvc3ZnL2V4dHJhLWltZy0xLnN2Z1wiKSBjZW50ZXIgY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0O1xyXG4gICAgd2lkdGg6IDE2cHg7XHJcbiAgICBoZWlnaHQ6IDE2cHg7XHJcbiAgfVxyXG59XHJcbi5leHRyYS1pdGVtLTIge1xyXG4gICY6OmJlZm9yZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIvaW1nL3N2Zy9leHRyYS1pbWctMi5zdmdcIikgY2VudGVyIGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdDtcclxuICAgIHdpZHRoOiAxNnB4O1xyXG4gICAgaGVpZ2h0OiAxNnB4O1xyXG4gIH1cclxufVxyXG4uZXh0cmEtaXRlbS0zIHtcclxuICAmOjpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZDogdXJsKFwiL2ltZy9zdmcvZXh0cmEtaW1nLTMuc3ZnXCIpIGNlbnRlciBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQ7XHJcbiAgICB3aWR0aDogMzJweDtcclxuICAgIGhlaWdodDogMTZweDtcclxuICB9XHJcbn1cclxuLmV4dHJhLWl0ZW0tNCB7XHJcbiAgJjo6YmVmb3JlIHtcclxuICAgIGJhY2tncm91bmQ6IHVybChcIi9pbWcvc3ZnL2V4dHJhLWltZy00LnN2Z1wiKSBjZW50ZXIgY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0O1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDE2cHg7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBAaW1wb3J0IFwiLi4vbm9kZV9tb2R1bGVzL3Qtc2Nyb2xsL3Nhc3MvdC1zY3JvbGwubWluLnNjc3NcIjtcclxuXHJcbi8qIEhFQURFUiBTVEFSVCAqL1xyXG5cclxuQGltcG9ydCBcImJsb2NrL2hlYWRlclwiO1xyXG5cclxuLyogSEVBREVSIEVORCAqL1xyXG5cclxuLyogTUFJTiBTVEFSVCAqL1xyXG5cclxuQGltcG9ydCBcImJsb2NrL21haW5cIjtcclxuXHJcbi8qIE1BSU4gRU5EICovXHJcblxyXG4vKiBGT09URVIgU1RBUlQgKi9cclxuXHJcbkBpbXBvcnQgXCJibG9jay9mb290ZXJcIjtcclxuXHJcbi8qIEZPT1RFUiBFTkQgKi9cclxuXHJcbi8qIEBtZWRpYSAqL1xyXG4vKiBAbWVkaWEgKi9cclxuLyogQG1lZGlhICovXHJcbi8qIEBtZWRpYSAqL1xyXG4vKiBAbWVkaWEgKi9cclxuLyogQG1lZGlhICovXHJcbi8qIEBtZWRpYSAqL1xyXG4vKiBAbWVkaWEgKi9cclxuXHJcbi8vIC8qIExhcHRvcHMgKi9cclxuLy8gQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjAwcHgpIHtcclxuLy8gfVxyXG4vLyAvKiBUYWJsZXRzLCBNZWRpdW0gRGV2aWNlcywgRGVza3RvcHMgKi9cclxuLy8gQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xyXG4vLyB9XHJcbi8vIC8qIFNtYWxsIERldmljZXMsIFRhYmxldHMgKi9cclxuLy8gQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4vLyB9XHJcbi8vIC8qIFBob25lcyAqL1xyXG4vLyBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XHJcbi8vIH1cclxuLy8gLyogRXh0cmEgU21hbGwgRGV2aWNlcywgb2xkIFBob25lcyAqL1xyXG4vLyBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XHJcbi8vIH1cclxuIiwiLmhlYWRlciB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHotaW5kZXg6IDM7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE4MTgxODtcclxufVxyXG4uaGVhZGVyX19jb250YWluZXIge1xyXG4gIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuXHJcbi5oZWFkZXJfX2xvZ28ge1xyXG59XHJcbi5oZWFkZXJfX2xvZ28tbGluayB7XHJcbn1cclxuLmhlYWRlcl9fbmF2IHtcclxufVxyXG4uaGVhZGVyX19uYXYtbGlzdCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgZ2FwOiAzMHB4O1xyXG59XHJcbi5oZWFkZXJfX25hdi1pdGVtIHtcclxuICAmOmxhc3QtY2hpbGQgLmhlYWRlcl9fbmF2LWxpbmsge1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZiA7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICBjb2xvcjogIzAwMDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgfVxyXG59XHJcbi5oZWFkZXJfX25hdi1saW5rIHtcclxuICBjb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xyXG59XHJcbi5qcy1zY3JvbGwge1xyXG59XHJcblxyXG4uaGVhZGVyX19idXJnZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHdpZHRoOiAzMHB4O1xyXG4gIGhlaWdodDogMzBweDtcclxuICBnYXA6IDVweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLmJ1cmdlcl9fbGluZSB7XHJcbiAgd2lkdGg6IDI0cHg7XHJcbiAgYm9yZGVyOiBzb2xpZCAxcHggd2hpdGU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC41cztcclxufVxyXG5cclxuLmJ1cmdlcl9fbGluZS1taWRkbGUge1xyXG4gIHdpZHRoOiAxOHB4O1xyXG59XHJcbiIsIi8qIE1BSU4gU1RBUlQgKi9cclxuXHJcbi8qIEhFUk8gU1RBUlQgKi9cclxuLmhlcm8ge1xyXG4gIGJhY2tncm91bmQ6IHVybChcIi4uLy4uL2ltZy9oZXJvX2ltZy5qcGdcIikgY2VudGVyIGNlbnRlciAvIGNvdmVyIG5vLXJlcGVhdCBmaXhlZCAjMDAwMDAwO1xyXG4gIGhlaWdodDogY2FsYygxMDB2aCAtIDkwcHgpO1xyXG4gIHBhZGRpbmctYm90dG9tOiA0MXB4O1xyXG59XHJcblxyXG4uaGVyb19fY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG4uaGVyb19fc3VidGl0bGUge1xyXG4gIG1hcmdpbi1ib3R0b206IDFweDtcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG59XHJcblxyXG4uaGVyb19fdGl0bGUge1xyXG4gIG1hcmdpbi1ib3R0b206IDE4cHg7XHJcbn1cclxuXHJcbi5oZXJvX19kZXNjIHtcclxuICBjb2xvcjogI2MwYzBjMDtcclxuICBtYXJnaW4tYm90dG9tOiAxNHB4O1xyXG4gIG1heC13aWR0aDogNTAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuXHJcblxyXG4vKiBIRVJPIEVORCAqL1xyXG4vKiBJTlRSTyBTVEFSVCAqL1xyXG4vKiBJTlRSTyBFTkQgKi9cclxuLyogSU5UUk8gU1RBUlQgKi9cclxuLyogSU5UUk8gRU5EICovXHJcbi8qIElOVFJPIFNUQVJUICovXHJcbi8qIElOVFJPIEVORCAqL1xyXG5cclxuLyogTUFJTiBFTkQgKi9cclxuXHJcbi8vIC8qIElOVFJPIFNUQVJUICovXHJcbi8vIC5pbnRybyB7XHJcbi8vICAgd2lkdGg6IDEwMCU7XHJcbi8vICAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9pbnRyby1iZy5qcGcpIGNlbnRlciBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQgZml4ZWQgJGJnLWNvbG9yO1xyXG4vLyAgIHBhZGRpbmctYm90dG9tOiA4MHB4O1xyXG4vLyAgIC8vIG1hcmdpbi1ib3R0b206IDEwMHB4O1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuLy8gICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbi8vIH1cclxuLy8gLmludHJvX193aGVlbCB7XHJcbi8vICAgLy8gLypkaXNwbGF5OiBmbGV4O1xyXG4vLyAgIC8vIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbi8vICAgLy8ganVzdGlmeS1jb250ZW50OiBjZW50ZXI7Ki9cclxuLy8gICBtYXJnaW4tYm90dG9tOiAxNTBweDtcclxuLy8gfVxyXG4vLyAuaW50cm9fX3doZWVsLXBpYyB7XHJcbi8vICAgbWFyZ2luOiAwIGF1dG87XHJcbi8vICAgLy8gbWFyZ2luLXRvcDogMjVweDtcclxuLy8gICBhbmltYXRpb24tbmFtZTogd2hlZWwtcm90YXRpb247XHJcbi8vICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAzMHM7XHJcbi8vICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7XHJcbi8vICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQ7XHJcbi8vIH1cclxuLy8gQGtleWZyYW1lcyB3aGVlbC1yb3RhdGlvbiB7XHJcbi8vICAgMCUge1xyXG4vLyAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbi8vICAgfVxyXG4vLyAgIDI1JSB7XHJcbi8vICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG4vLyAgIH1cclxuLy8gICA1MCUge1xyXG4vLyAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuLy8gICB9XHJcbi8vICAgNzUlIHtcclxuLy8gICAgIHRyYW5zZm9ybTogcm90YXRlKC0zNjBkZWcpO1xyXG4vLyAgIH1cclxuLy8gICAxMDAlIHtcclxuLy8gICAgIHRyYW5zZm9ybTogcm90YXRlKC0zNjBkZWcpO1xyXG4vLyAgIH1cclxuLy8gfVxyXG4vLyAuaW50cm9fX2NlbnRlciB7XHJcbi8vICAgY29sb3I6IHdoaXRlO1xyXG4vLyAgIGRpc3BsYXk6IGdyaWQ7XHJcbi8vICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA4MHB4IG1pbm1heCgzMDBweCwgMWZyKSA4MHB4O1xyXG4vLyAgICYgYSB7XHJcbi8vICAgICBjb2xvcjogd2hpdGU7XHJcbi8vICAgfVxyXG4vLyAgICY6OmJlZm9yZSB7XHJcbi8vICAgICBjb250ZW50OiBcIlwiO1xyXG4vLyAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4vLyAgICAgd2lkdGg6IDFweDtcclxuLy8gICAgIGhlaWdodDogOTB2aDtcclxuLy8gICAgIGJvdHRvbTogMDtcclxuLy8gICAgIGxlZnQ6IGNhbGMoNTAlIC0gMjB2dyk7XHJcbi8vICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XHJcbi8vICAgfVxyXG4vLyAgICY6OmFmdGVyIHtcclxuLy8gICAgIGNvbnRlbnQ6IFwiXCI7XHJcbi8vICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbi8vICAgICB3aWR0aDogMXB4O1xyXG4vLyAgICAgaGVpZ2h0OiA5MHZoO1xyXG4vLyAgICAgYm90dG9tOiAwO1xyXG4vLyAgICAgbGVmdDogY2FsYyg1MCUgKyAyMHZ3KTtcclxuLy8gICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcclxuLy8gICB9XHJcbi8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4vLyAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbi8vICAgbWFyZ2luLWJvdHRvbTogODBweDtcclxuLy8gfVxyXG4vLyAuaW50cm9fX2NlbnRlci1zY2hlZHVsZSB7XHJcbi8vICAgd3JpdGluZy1tb2RlOiB2ZXJ0aWNhbC1ybDtcclxuLy8gICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG4vLyAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4vLyAgIGZvbnQtc2l6ZTogMTJweDtcclxuLy8gICBsaW5lLWhlaWdodDogMTJweDtcclxuLy8gfVxyXG5cclxuLy8gLnNjaGVkdWxlLWJsb2NrIHtcclxuLy8gfVxyXG4vLyAuaW50cm9fX2NlbnRlci1tYWluIHtcclxuLy8gfVxyXG4vLyAubWFpbi1ibG9jayB7XHJcbi8vIH1cclxuLy8gLm1haW4tYmxvY2tfX3N1YnRpdGxlIHtcclxuLy8gICBmb250LXNpemU6IDEycHg7XHJcbi8vICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4vLyAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4vLyAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xyXG4vLyAgIGxldHRlci1zcGFjaW5nOiAwLjVlbTtcclxuLy8gICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4vLyB9XHJcbi8vIC5tYWluLWJsb2NrX190aXRsZSB7XHJcbi8vIH1cclxuLy8gLm1haW4tYmxvY2tfX2xpbmtzIHtcclxuLy8gICBkaXNwbGF5OiBmbGV4O1xyXG4vLyAgIGdhcDogNDBweDtcclxuLy8gICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyB9XHJcbi8vIC5tYWluLWJsb2NrX19saW5rIHtcclxuLy8gICBkaXNwbGF5OiBmbGV4O1xyXG4vLyAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbi8vICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbi8vICAgd2lkdGg6IDIwMHB4O1xyXG4vLyAgIGhlaWdodDogNjBweDtcclxuLy8gICAvLyAvKmJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyovXHJcbi8vICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4vLyAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcclxuLy8gICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4vLyAgICY6aG92ZXIge1xyXG4vLyAgICAgYmFja2dyb3VuZC1jb2xvcjogJG15eWVsbG93O1xyXG4vLyAgIH1cclxuLy8gfVxyXG4vLyAuaW50cm9fX2NlbnRlci1zb2NpYWwge1xyXG4vLyB9XHJcbi8vIC5zb2NpYWwtYmxvY2sge1xyXG4vLyB9XHJcbi8vIC5zb2NpYWwtYmxvY2tfX2l0ZW0ge1xyXG4vLyAgIHdpZHRoOiA2MHB4O1xyXG4vLyAgIGhlaWdodDogNjBweDtcclxuLy8gICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbi8vICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuLy8gICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbi8vICAgYm9yZGVyOiAkYm9yZGVybGluZTtcclxuLy8gICAmOmhvdmVyIHtcclxuLy8gICAgIGJveC1zaGFkb3c6IDAgMCAycHggd2hpdGU7XHJcbi8vICAgfVxyXG4vLyB9XHJcbi8vIC5zb2NpYWwtYmxvY2tfX2xpbmsge1xyXG4vLyAgIHBhZGRpbmc6IDIwcHg7XHJcbi8vICAgZGlzcGxheTogZmxleDtcclxuLy8gICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyB9XHJcbi8vIC5pbnRyb19fYXJyZG93biB7XHJcbi8vICAgZGlzcGxheTogZmxleDtcclxuLy8gICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuLy8gICBib3JkZXI6ICRib3JkZXJsaW5lO1xyXG4vLyAgIHdpZHRoOiA2MHB4O1xyXG4vLyAgIGhlaWdodDogNjBweDtcclxuLy8gICBtYXJnaW46IDAgYXV0bztcclxuLy8gICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbi8vICAgJjo6YmVmb3JlIHtcclxuLy8gICAgIGNvbnRlbnQ6IFwiXCI7XHJcbi8vICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbi8vICAgICB3aWR0aDogMXB4O1xyXG4vLyAgICAgaGVpZ2h0OiA3MHZoO1xyXG4vLyAgICAgYm90dG9tOiAxMDAlO1xyXG4vLyAgICAgbGVmdDogNTAlO1xyXG4vLyAgICAgYmFja2dyb3VuZDogcmdiYSgkY29sb3I6ICNmZmZmZmYsICRhbHBoYTogMC4yKTtcclxuLy8gICB9XHJcbi8vICAgJjo6YWZ0ZXIge1xyXG4vLyAgICAgY29udGVudDogXCJcIjtcclxuLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuLy8gICAgIHdpZHRoOiAxcHg7XHJcbi8vICAgICBoZWlnaHQ6IDI1dmg7XHJcbi8vICAgICB0b3A6IDEwMCU7XHJcbi8vICAgICBsZWZ0OiA1MCU7XHJcbi8vICAgICBiYWNrZ3JvdW5kOiByZ2JhKCRjb2xvcjogI2ZmZmZmZiwgJGFscGhhOiAwLjIpO1xyXG4vLyAgIH1cclxuLy8gfVxyXG4vLyAuaW50cm9fX2FycmRvd24tbGluayB7XHJcbi8vICAgZGlzcGxheTogZmxleDtcclxuLy8gICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyAgIHdpZHRoOiA0MHB4O1xyXG4vLyAgIGhlaWdodDogNDBweDtcclxuLy8gICBjb2xvcjogIzMzMzMzMztcclxuLy8gICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4vLyAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuLy8gICBmb250LXNpemU6IDIwcHg7XHJcbi8vICAgYW5pbWF0aW9uOiBzY2FsZS11cC1jZW50ZXIgMC41cyBjdWJpYy1iZXppZXIoMC4zOSwgMC41NzUsIDAuNTY1LCAxKSBpbmZpbml0ZSBhbHRlcm5hdGU7XHJcbi8vICAgdHJhbnNpdGlvbjogMC41cyBhbGwgZWFzZTtcclxuLy8gICAmOmhvdmVyIHtcclxuLy8gICAgIC8vIC8qdHJhbnNmb3JtOiBzY2FsZSgwLjEpOyovXHJcbi8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbXl5ZWxsb3c7XHJcbi8vICAgICBhbmltYXRpb246IG5vbmU7XHJcbi8vICAgfVxyXG4vLyB9XHJcbi8vIEBrZXlmcmFtZXMgc2NhbGUtdXAtY2VudGVyIHtcclxuLy8gICAwJSB7XHJcbi8vICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4vLyAgIH1cclxuLy8gICAxMDAlIHtcclxuLy8gICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcclxuLy8gICB9XHJcbi8vIH1cclxuXHJcbi8vIC8qIElOVFJPIEVORCAqL1xyXG4vLyAvKiBhYm91dCBTVEFSVCAqL1xyXG4vLyAuYWJvdXQge1xyXG4vLyAgIC8vIG1hcmdpbi1ib3R0b206IDEwMHB4O1xyXG4vLyB9XHJcbi8vIC5hYm91dF9faW1nIHtcclxuLy8gICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL2Fib3V0LXBpYy5qcGcpIGxlZnQgY2VudGVyIC8gY29udGFpbiBuby1yZXBlYXQ7XHJcbi8vIH1cclxuLy8gLyogYWJvdXQgRU5EICovXHJcbi8vIC8qIHRlYW0gU1RBUlQgKi9cclxuLy8gLnRlYW0ge1xyXG4vLyAgIGJhY2tncm91bmQ6IHVybCguLi9pbWcvdGVhbS1iZy5qcGcpIGNlbnRlciBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQgZml4ZWQgJGJnLWNvbG9yO1xyXG4vLyAgIG1hcmdpbi1ib3R0b206IDEwMHB4O1xyXG4vLyAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuLy8gfVxyXG4vLyAudGVhbV9fdGl0bGUge1xyXG4vLyAgIGNvbG9yOiB3aGl0ZTtcclxuLy8gfVxyXG4vLyAudGVhbS1hcnRpY2xlIHtcclxuLy8gICBjb2xvcjogd2hpdGU7XHJcbi8vIH1cclxuLy8gLnRlYW1fX2ltZy1jb250YWluZXIge1xyXG4vLyAgIG9yZGVyOiAtMTtcclxuLy8gfVxyXG4vLyAudGVhbV9faW1nIHtcclxuLy8gICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL3RlYW0tcGljLmpwZykgcmlnaHQgY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0O1xyXG4vLyB9XHJcbi8vIC8qIHRlYW0gRU5EICovXHJcbi8vIC8qIGJvb2tpbmcgU1RBUlQgKi9cclxuLy8gLmJvb2tpbmdfX2Zvcm0ge1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuLy8gICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyB9XHJcbi8vIC5ib29raW5nX19pbnB1dHMge1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgZmxleC13cmFwOiB3cmFwO1xyXG4vLyAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4vLyAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbi8vIH1cclxuLy8gLmJvb2tpbmdfX2lucHV0IHtcclxuLy8gICBiYWNrZ3JvdW5kOiAjZTVlNWU1O1xyXG4vLyAgIGhlaWdodDogNjBweDtcclxuLy8gICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbi8vICAgZmxleDogJGNvbC02O1xyXG4vLyAgIGZsZXgtZ3JvdzogMTtcclxuLy8gICAvLyBtYXgtd2lkdGg6IDI3OHB4O1xyXG4vLyAgIHdpZHRoOiAxMDAlO1xyXG4vLyAgIGNvbG9yOiAkbGlnaHQtZ3JleTtcclxuLy8gICBsaW5lLWhlaWdodDogMTlweDtcclxuLy8gICBwYWRkaW5nOiAyMHB4O1xyXG4vLyAgIG1hcmdpbjogNXB4O1xyXG4vLyAgIGJvcmRlcjogbm9uZTtcclxuLy8gICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbi8vICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XHJcbi8vICAgb3V0bGluZTogbm9uZTtcclxuLy8gICAmOmhvdmVyLFxyXG4vLyAgICY6Zm9jdXMsXHJcbi8vICAgJjphY3RpdmUsXHJcbi8vICAgJjpmb2N1cy12aXNpYmxlIHtcclxuLy8gICAgIGJvcmRlcjogMXB4IGluc2V0IHJnYmEoNTEsIDUxLCA1MSwgMC4xKTtcclxuLy8gICAgIG91dGxpbmU6IG5vbmU7XHJcbi8vICAgfVxyXG4vLyB9XHJcblxyXG4vLyAuYm9va2luZ19fc3VibWl0IHtcclxuLy8gICB3aWR0aDogMTAwJTtcclxuLy8gICBmbGV4OiAkY29sLTEyO1xyXG4vLyAgIGZsZXgtZ3JvdzogMTtcclxuLy8gICAvLyBtYXgtd2lkdGg6IDU2NHB4O1xyXG4vLyAgIGJhY2tncm91bmQ6ICNlOGMzMDA7XHJcbi8vICAgaGVpZ2h0OiA2MHB4O1xyXG4vLyAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuLy8gICBjb2xvcjogI2ZmZmZmZjtcclxuLy8gICBmb250LXNpemU6IDEycHg7XHJcbi8vICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbi8vICAgcGFkZGluZzogMjBweDtcclxuLy8gICBtYXJnaW46IDVweDtcclxuLy8gICBib3JkZXI6IG5vbmU7XHJcbi8vIH1cclxuLy8gLmJvb2tpbmdfX2ltZyB7XHJcbi8vICAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9ib29raW5nLXBpYy5qcGcpIGxlZnQgY2VudGVyIC8gY29udGFpbiBuby1yZXBlYXQ7XHJcbi8vIH1cclxuLy8gLmJvb2tpbmdfX3NjaGVkdWxlIHtcclxuLy8gICBjb2xvcjogJGxpZ2h0LWdyZXk7XHJcbi8vICAgbWFyZ2luLXRvcDogNTBweDtcclxuLy8gfVxyXG4vLyAvKiBib29raW5nIEVORCAqL1xyXG4vLyAvKiBzcGVjaWFsdGllcyBTVEFSVCAqL1xyXG5cclxuLy8gLy8gQGltcG9ydCBcIi4uLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvc3dpcGVyLnNjc3NcIjtcclxuLy8gLy8gQGltcG9ydCBcIi4uLy4uL25vZGVfbW9kdWxlcy9zd2lwZXIvbW9kdWxlcy9wYWdpbmF0aW9uL3BhZ2luYXRpb24uc2Nzc1wiO1xyXG5cclxuLy8gLnNwZWNpYWx0aWVzIHtcclxuLy8gICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvc3BlY2lhbHRpZXMtYmcuanBnXCIpIGNlbnRlciBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQgZml4ZWQgJGJnLWNvbG9yO1xyXG4vLyAgIG1hcmdpbi1ib3R0b206IDEwMHB4O1xyXG4vLyAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuLy8gfVxyXG4vLyAuc3BlY2lhbHRpZXMgLnNwZWNpYWx0aWVzLXJvdyB7XHJcbi8vICAgcG9zaXRpb246IHN0YXRpYztcclxuLy8gICBwYWRkaW5nOiAwO1xyXG4vLyB9XHJcbi8vIC5zcGVjaWFsdGllcy1wYWdlIHtcclxuLy8gICBwYWRkaW5nOiAwICRnYXAgKiAwLjU7XHJcbi8vIH1cclxuLy8gLnNwZWNpYWx0aWVzX190aXRsZSB7XHJcbi8vICAgY29sb3I6IHdoaXRlO1xyXG4vLyB9XHJcbi8vIC5zcGVjaWFsdGllcy1hcnRpY2xlIHtcclxuLy8gICBjb2xvcjogd2hpdGU7XHJcbi8vIH1cclxuLy8gLnNwZWNpYWx0aWVzX19pbWctY29udGFpbmVyIHtcclxuLy8gICBvcmRlcjogLTE7XHJcbi8vIH1cclxuLy8gLnNwZWNpYWx0aWVzX19pbWcge1xyXG4vLyAgIGJhY2tncm91bmQ6IHVybCguLi9pbWcvc3BlY2lhbHRpZXMtcGljLmpwZykgcmlnaHQgY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0O1xyXG4vLyB9XHJcbi8vIC5zcGVjaWFsdGllc19faW1nMiB7XHJcbi8vICAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9zcGVjaWFsdGllcy1waWMyLmpwZykgcmlnaHQgY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0O1xyXG4vLyB9XHJcbi8vIC5zcGVjaWFsdGllc19faW1nMyB7XHJcbi8vICAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9zcGVjaWFsdGllcy1waWMzLmpwZykgcmlnaHQgY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0O1xyXG4vLyB9XHJcbi8vIC5zd2lwZXIge1xyXG4vLyB9XHJcbi8vIC5zcGVjaWFsdGllcyAuc3dpcGVyLXBhZ2luYXRpb24ge1xyXG4vLyAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbi8vICAgbWFyZ2luLXRvcDogNTBweDtcclxuLy8gfVxyXG4vLyAuc3BlY2lhbHRpZXMgLnN3aXBlci1wYWdpbmF0aW9uIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xyXG4vLyAgIHdpZHRoOiAxMnB4O1xyXG4vLyAgIGhlaWdodDogMTJweDtcclxuLy8gICBvcGFjaXR5OiAxO1xyXG4vLyAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcclxuLy8gICBtYXJnaW46IDAgMTVweCAhaW1wb3J0YW50O1xyXG4vLyB9XHJcbi8vIC5zcGVjaWFsdGllcyAuc3dpcGVyLXBhZ2luYXRpb24gLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUge1xyXG4vLyAgIG9wYWNpdHk6IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1vcGFjaXR5LCAxKTtcclxuLy8gICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xyXG4vLyB9XHJcbi8vIC8qIHNwZWNpYWx0aWVzIEVORCAqL1xyXG4vLyAvKiBtZW51IFNUQVJUICovXHJcbi8vIC5tZW51IHtcclxuLy8gfVxyXG4vLyAuZnVsbHNjcmVlbiB7XHJcbi8vIH1cclxuLy8gLmNvbnRhaW5lciB7XHJcbi8vIH1cclxuLy8gLnNlY3Rpb24tY29sIHtcclxuLy8gfVxyXG4vLyAuc2VjdGlvbi1wYWdlIHtcclxuLy8gfVxyXG4vLyAuYXJ0aWNsZSB7XHJcbi8vIH1cclxuLy8gLm1lbnUtYXJ0aWNsZSB7XHJcbi8vICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuLy8gfVxyXG4vLyAuaDIge1xyXG4vLyB9XHJcbi8vIC5hcnRpY2xlLXRpdGxlIHtcclxuLy8gfVxyXG4vLyAuYWJvdXRfX2FydGljbGUtdGl0bGUge1xyXG4vLyB9XHJcbi8vIC5oMyB7XHJcbi8vIH1cclxuLy8gLmFydGljbGUtc3VidGl0bGUge1xyXG4vLyB9XHJcbi8vIC5hYm91dF9fYXJ0aWNsZS1zdWJ0aXRsZSB7XHJcbi8vIH1cclxuLy8gLm1lbnVfX3RhYi1idG5zIHtcclxuLy8gICBkaXNwbGF5OiBmbGV4O1xyXG4vLyAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4vLyAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbi8vICAgZmxleC13cmFwOiB3cmFwO1xyXG4vLyAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbi8vIH1cclxuLy8gLm1lbnVfX3RhYi1idG4ge1xyXG4vLyAgIC8vIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgLy8ganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbi8vICAgLy8gYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuLy8gICAvLyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbi8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4vLyAgIGxpbmUtaGVpZ2h0OiA0NHB4O1xyXG4vLyAgIHdpZHRoOiAxMjBweDtcclxuLy8gICBoZWlnaHQ6IDUwcHg7XHJcbi8vICAgZm9udC1zaXplOiAxMnB4O1xyXG4vLyAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4vLyAgIGNvbG9yOiAkZ3JleTtcclxuLy8gICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4vLyAgIGJvcmRlcjogbm9uZTtcclxuLy8gICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2JhKCRjb2xvcjogIzMzMzMzMywgJGFscGhhOiAwLjIpO1xyXG4vLyAgIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XHJcbi8vICAgb3BhY2l0eTogMC44O1xyXG4vLyAgIHRyYW5zaXRpb246IDFzO1xyXG4vLyAgICY6bGFzdC1jaGlsZCB7XHJcbi8vICAgICBib3JkZXI6IG5vbmU7XHJcbi8vICAgfVxyXG4vLyAgICY6aG92ZXIge1xyXG4vLyAgICAgLy8gYm9yZGVyOiAxcHggc29saWQgcmdiYSgkY29sb3I6ICMzMzMzMzMsICRhbHBoYTogMC4yKTtcclxuLy8gICAgIC8vIHRyYW5zaXRpb246IDFzO1xyXG4vLyAgIH1cclxuLy8gICAmOmJlZm9yZSB7XHJcbi8vICAgICBkaXNwbGF5OiBibG9jaztcclxuLy8gICAgIGNvbnRlbnQ6IFwiXCI7XHJcbi8vICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgkY29sb3I6ICMzMzMzMzMsICRhbHBoYTogMC4yKTtcclxuLy8gICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xyXG4vLyAgICAgdHJhbnNmb3JtLW9yaWdpbjogMTAwJSA1MCU7XHJcbi8vICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgZWFzZS1pbi1vdXQ7XHJcbi8vICAgfVxyXG4vLyAgICY6aG92ZXI6YmVmb3JlIHtcclxuLy8gICAgIHRyYW5zZm9ybTogc2NhbGVYKDEpO1xyXG4vLyAgICAgdHJhbnNmb3JtLW9yaWdpbjogMCUgNTAlO1xyXG4vLyAgIH1cclxuLy8gICAmOmFmdGVyIHtcclxuLy8gICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4vLyAgICAgY29udGVudDogXCJcIjtcclxuLy8gICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKCRjb2xvcjogIzMzMzMzMywgJGFscGhhOiAwLjIpO1xyXG4vLyAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XHJcbi8vICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwJSA1MCU7XHJcbi8vICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgZWFzZS1pbi1vdXQ7XHJcbi8vICAgfVxyXG4vLyAgICY6aG92ZXI6YWZ0ZXIge1xyXG4vLyAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMSk7XHJcbi8vICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAxMDAlIDUwJTtcclxuLy8gICB9XHJcbi8vIH1cclxuLy8gLm1lbnVfX3RhYi1idG5fanMtYWN0aXZlIHtcclxuLy8gICBvcGFjaXR5OiAxO1xyXG4vLyB9XHJcbi8vIC5tZW51X190YWItaXRlbXMge1xyXG4vLyAgIHRyYW5zaXRpb246IDAuMjVzO1xyXG4vLyB9XHJcbi8vIC8q0LTQu9GPIDIt0LPQviDQstCw0YDQuNCw0L3RgtCwINCyIG1haW4uanMqL1xyXG4vLyAvKi5tZW51X190YWItaXRlbSB7XHJcbi8vICAgZGlzcGxheTogbm9uZTtcclxuLy8gICB6LWluZGV4OiAtMjtcclxuLy8gICAmLmFjdGl2ZSB7XHJcbi8vICAgICBkaXNwbGF5OiBibG9jaztcclxuLy8gICAgIHRyYW5zaXRpb246IGRpc3BsYXkgMXM7XHJcbi8vICAgfVxyXG4vLyB9Ki9cclxuLy8gLyrQtNC70Y8gMiDQuNC70LggMy3Qs9C+INCy0LDRgNC40LDQvdGC0LAg0LIgbWFpbi5qcyDRgSDQv9C70LDQstC90YvQvCDQv9C+0Y/QstC70LXQvdC40LXQvCAqL1xyXG4vLyAubWVudV9fdGFiLWl0ZW0ge1xyXG4vLyAgIGRpc3BsYXk6IG5vbmU7XHJcbi8vICAgdHJhbnNmb3JtOiBzY2FsZVkoMC44KTtcclxuLy8gICBvcGFjaXR5OiAwO1xyXG4vLyAgIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciB0b3A7XHJcbi8vICAgYW5pbWF0aW9uOiBzaG93Q29udGVudCAwLjZzIGZvcndhcmRzO1xyXG4vLyAgICYuYWN0aXZlIHtcclxuLy8gICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4vLyAgIH1cclxuLy8gfVxyXG4vLyAubWVudV9fdGFiLWl0ZW1fanMtYWN0aXZlIHtcclxuLy8gICBkaXNwbGF5OiBibG9jaztcclxuLy8gfVxyXG4vLyBAa2V5ZnJhbWVzIHNob3dDb250ZW50IHtcclxuLy8gICAwJSB7XHJcbi8vICAgICB0cmFuc2Zvcm06IHNjYWxlWSgwLjgpO1xyXG4vLyAgICAgb3BhY2l0eTogMDtcclxuLy8gICB9XHJcbi8vICAgMTAwJSB7XHJcbi8vICAgICB0cmFuc2Zvcm06IHNjYWxlWSgxKTtcclxuLy8gICAgIG9wYWNpdHk6IDE7XHJcbi8vICAgfVxyXG4vLyB9XHJcbi8vIC5tZW51X19saXN0IHtcclxuLy8gICB0cmFuc2l0aW9uOiBvcGFjaXR5IDEuMjVzO1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgZmxleC13cmFwOiB3cmFwO1xyXG4vLyAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4vLyAgIGdhcDogKCRnYXAgKiAwLjUpICRnYXA7XHJcbi8vIH1cclxuLy8gLm1lbnVfX2l0ZW0ge1xyXG4vLyAgIGZsZXg6ICRjb2wtNDtcclxuLy8gfVxyXG4vLyAubWVudV9faXRlbS10YWJsZSB7XHJcbi8vICAgZm9udC1mYW1pbHk6IEJhbm55O1xyXG4vLyAgIGZvbnQtc2l6ZTogMThweDtcclxuLy8gICBsaW5lLWhlaWdodDogMTtcclxuLy8gICBjb2xvcjogJGdyZXk7XHJcbi8vICAgdGV4dC1hbGlnbjogbGVmdDtcclxuLy8gICB3aWR0aDogMTAwJTtcclxuLy8gfVxyXG4vLyAubWVudV9faXRlbS1uYW1lIHtcclxuLy8gICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4vLyAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4vLyB9XHJcbi8vIC5tZW51X19pdGVtLXByaWNlIHtcclxuLy8gICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4vLyAgIHdpZHRoOiAxMTBweDtcclxuLy8gICBmb250LXdlaWdodDogYm9sZDtcclxuLy8gfVxyXG4vLyAubWVudV9faXRlbS1kZXNjIHtcclxuLy8gICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcclxuLy8gICBmb250LXNpemU6IDEycHg7XHJcbi8vICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4vLyAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbi8vICAgbGluZS1oZWlnaHQ6IDE7XHJcbi8vIH1cclxuLy8gLyogbWVudSBFTkQgKi9cclxuLy8gLyogZXZlbnRzIFNUQVJUICovXHJcbi8vIC5ldmVudHMge1xyXG4vLyAgIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9ldmVudHMtYmcuanBnXCIpIGNlbnRlciBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQgZml4ZWQgJGJnLWNvbG9yO1xyXG4vLyAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuLy8gfVxyXG4vLyAuZXZlbnRzX190aXRsZSB7XHJcbi8vICAgY29sb3I6IHdoaXRlO1xyXG4vLyB9XHJcbi8vIC5ldmVudHMtcGFnZSB7XHJcbi8vICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuLy8gfVxyXG4vLyAuZXZlbnRzX19pbWctY29udGFpbmVyIHtcclxuLy8gfVxyXG4vLyAuZXZlbnRzX19pbWcxIHtcclxuLy8gICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL2V2ZW50cy1waWMxLmpwZykgcmlnaHQgY2VudGVyIC8gY292ZXIgbm8tcmVwZWF0O1xyXG4vLyB9XHJcbi8vIC5ldmVudHNfX2ltZzIge1xyXG4vLyAgIGJhY2tncm91bmQ6IHVybCguLi9pbWcvZXZlbnRzLXBpYzIuanBnKSByaWdodCBjZW50ZXIgLyBjb3ZlciBuby1yZXBlYXQ7XHJcbi8vIH1cclxuLy8gLmV2ZW50c19fc2NoZWR1bGUge1xyXG4vLyAgIGZvbnQtc2l6ZTogMTJweDtcclxuLy8gICBsaW5lLWhlaWdodDogMTJweDtcclxuLy8gICBkaXNwbGF5OiBmbGV4O1xyXG4vLyAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbi8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4vLyAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XHJcbi8vICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4vLyAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbi8vIH1cclxuLy8gLyogZXZlbnRzIEVORCAqL1xyXG4vLyAvKiBnYWxsZXJ5IFNUQVJUICovXHJcbi8vIC5nYWxsZXJ5LXBhZ2Uge1xyXG4vLyAgIG1hcmdpbi10b3A6IDA7XHJcbi8vICAgd2lkdGg6IDEwMCU7XHJcbi8vICAgZGlzcGxheTogZmxleDtcclxuLy8gICBmbGV4LXdyYXA6IHdyYXA7XHJcbi8vIH1cclxuLy8gLmdhbGxlcnktcGFnZV9fcGljIHtcclxuLy8gICBmbGV4OiAxIDAgMjAwcHg7XHJcbi8vIH1cclxuLy8gLmdhbGxlcnktcGFnZV9faW1nIHtcclxuLy8gICB3aWR0aDogMTAwJTtcclxuLy8gICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4vLyB9XHJcbi8vIC8qIGdhbGxlcnkgRU5EICovXHJcbi8vIC8qIGNvbnRhY3QgU1RBUlQgKi9cclxuLy8gLmNvbnRhY3RfX2Zvcm0ge1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuLy8gICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyAgIHdpZHRoOiAxMDAlO1xyXG4vLyB9XHJcbi8vIC5jb250YWN0X19pbnB1dHMge1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgZmxleC13cmFwOiB3cmFwO1xyXG4vLyAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4vLyAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbi8vICAgd2lkdGg6IDEwMCU7XHJcbi8vIH1cclxuLy8gLmNvbnRhY3RfX2lucHV0LFxyXG4vLyAuY29udGFjdF9fdGV4dGFyZWEge1xyXG4vLyAgIGJhY2tncm91bmQ6ICNlNWU1ZTU7XHJcbi8vICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4vLyAgIGZsZXgtZ3JvdzogMTtcclxuLy8gICBjb2xvcjogJGxpZ2h0LWdyZXk7XHJcbi8vICAgbGluZS1oZWlnaHQ6IDE5cHg7XHJcbi8vICAgcGFkZGluZzogMjBweDtcclxuLy8gICBtYXJnaW46IDVweDtcclxuLy8gICBib3JkZXI6IG5vbmU7XHJcbi8vICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4vLyAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG4vLyAgIG91dGxpbmU6IG5vbmU7XHJcbi8vICAgJjpob3ZlcixcclxuLy8gICAmOmZvY3VzLFxyXG4vLyAgICY6YWN0aXZlLFxyXG4vLyAgICY6Zm9jdXMtdmlzaWJsZSB7XHJcbi8vICAgICBib3JkZXI6IDFweCBpbnNldCByZ2JhKDUxLCA1MSwgNTEsIDAuMSk7XHJcbi8vICAgICBvdXRsaW5lOiBub25lO1xyXG4vLyAgIH1cclxuLy8gfVxyXG4vLyAuY29udGFjdF9faW5wdXQge1xyXG4vLyAgIC8vIGhlaWdodDogNjBweDtcclxuLy8gICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbi8vICAgLy8gZmxleDogJGNvbC00O1xyXG4vLyAgIGZsZXgtYmFzaXM6IDMyJTtcclxuLy8gICBmbGV4LWdyb3c6IDE7XHJcbi8vICAgLy8gbWF4LXdpZHRoOiAyNzhweDtcclxuLy8gICBjb2xvcjogJGxpZ2h0LWdyZXk7XHJcbi8vICAgbGluZS1oZWlnaHQ6IDE5cHg7XHJcbi8vICAgcGFkZGluZzogMjBweDtcclxuLy8gICBtYXJnaW46IDVweDtcclxuLy8gICBib3JkZXI6IG5vbmU7XHJcbi8vICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4vLyAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG4vLyAgIG91dGxpbmU6IG5vbmU7XHJcbi8vICAgJjpob3ZlcixcclxuLy8gICAmOmZvY3VzLFxyXG4vLyAgICY6YWN0aXZlLFxyXG4vLyAgICY6Zm9jdXMtdmlzaWJsZSB7XHJcbi8vICAgICBib3JkZXI6IDFweCBpbnNldCByZ2JhKDUxLCA1MSwgNTEsIDAuMSk7XHJcbi8vICAgICBvdXRsaW5lOiBub25lO1xyXG4vLyAgIH1cclxuLy8gfVxyXG4vLyAuY29udGFjdF9fdGV4dGFyZWEge1xyXG4vLyAgIGZsZXgtYmFzaXM6IDEwMCU7XHJcbi8vIH1cclxuXHJcbi8vIC5jb250YWN0X19zdW0ge1xyXG4vLyAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgZmxleC13cmFwOiB3cmFwO1xyXG4vLyAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4vLyAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbi8vICAgd2lkdGg6IDEwMCU7XHJcbi8vICAgZ2FwOiAxMHB4O1xyXG4vLyB9XHJcbi8vIC5jb250YWN0X19zdW0tZGF0YSB7XHJcbi8vICAgZGlzcGxheTogZmxleDtcclxuLy8gICBmbGV4OiAkY29sLTY7XHJcbi8vICAgZmxleC1ncm93OiAxO1xyXG4vLyAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyAgICYgc3BhbiB7XHJcbi8vICAgICBmb250LXNpemU6IDEycHg7XHJcbi8vICAgICBmb250LXdlaWdodDogNzAwO1xyXG4vLyAgICAgY29sb3I6ICRsaWdodC1ncmV5O1xyXG4vLyAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4vLyAgICAgJiBpIHtcclxuLy8gICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4vLyAgICAgICAvLyBsaW5lLWhlaWdodDogMTQ7XHJcbi8vICAgICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbi8vICAgICAgIGNvbG9yOiAkbXl5ZWxsb3c7XHJcbi8vICAgICAgIHBhZGRpbmc6IDAgMTBweCAwIDA7XHJcbi8vICAgICB9XHJcbi8vICAgfVxyXG4vLyB9XHJcblxyXG4vLyAuY29udGFjdF9fc3VtLWJ0biB7XHJcbi8vICAgZGlzcGxheTogZmxleDtcclxuLy8gICBmbGV4OiAkY29sLTY7XHJcbi8vICAgZmxleC1ncm93OiAxO1xyXG4vLyAgIC8vIG1heC13aWR0aDogNTY0cHg7XHJcbi8vICAgYmFja2dyb3VuZDogI2U4YzMwMDtcclxuLy8gICBoZWlnaHQ6IDYwcHg7XHJcbi8vICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4vLyAgIGNvbG9yOiAjZmZmZmZmO1xyXG4vLyAgIGZvbnQtc2l6ZTogMTJweDtcclxuLy8gICBsaW5lLWhlaWdodDogMjBweDtcclxuLy8gICBwYWRkaW5nOiAyMHB4O1xyXG4vLyAgIG1hcmdpbjogNXB4O1xyXG4vLyAgIGJvcmRlcjogbm9uZTtcclxuLy8gICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuLy8gICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbi8vIH1cclxuLy8gLyogY29udGFjdCBFTkQgKi9cclxuLy8gLyogbWFwIFNUQVJUICovXHJcblxyXG4vLyAvKiBtYXAgRU5EICovXHJcbiIsIi8qIEZPT1RFUiBTVEFSVCAqL1xyXG5wLmZvb3Rlcl9fY29weXJpZ2h0IHtcclxuICBoZWlnaHQ6IDEwdmg7XHJcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjkpO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgJiBzcGFuIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgfVxyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBsaW5lLWhlaWdodDogMTJweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XHJcbn1cclxuLyogRk9PVEVSIEVORCAqL1xyXG4iXX0= */
