@charset "UTF-8";html{-webkit-box-sizing:border-box;box-sizing:border-box;scroll-behavior:smooth}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit;-webkit-transition:all .5s ease;-o-transition:all .5s ease;transition:all .5s ease}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol[class],ul[class]{padding:0}blockquote,body,dd,dl,figcaption,figure,h1,h2,h3,h4,li,ol[class],p{margin:0}body{padding:0;min-height:100vh;scroll-behavior:smooth;-webkit-transition:all .5s linear 0s;-o-transition:all .5s linear 0s;transition:all .5s linear 0s;text-rendering:optimizeSpeed;line-height:1.5;font:400 14px/20px "Poppins",sans-serif;color:#fff}ol[class],ul[class]{list-style:none}a{text-decoration:none}a:not([class]){-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto}img{max-width:100%;height:auto;display:block}article>*+*{margin-top:1em}button,input,select,textarea{font:inherit}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:"Poppins";font-style:normal;font-weight:400;src:local(""),url(../font/poppins-v20-latin-regular.woff2) format("woff2"),url(../font/poppins-v20-latin-regular.woff) format("woff")}.container{max-width:1200px;width:100%;padding:0 15px;margin:0 auto}h1,h2,h3{text-align:center}h1{font-size:calc(40px + 14*((100vw - 320px)/1120));line-height:59px}h2{font-size:40px;line-height:42px}h3{font-size:calc(16px + 7*((100vw - 320px)/1120));line-height:30px;color:silver;font-weight:400;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}h1,h2,h3,h4,p{opacity:0}h1,h2,h4{-webkit-transform:translateX(50%);-ms-transform:translateX(50%);transform:translateX(50%)}h4{letter-spacing:2px;text-transform:uppercase}p{font-size:14px;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.extra-list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-item-align:start;align-self:flex-start;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;margin-left:calc(20px + 1030*((100vw - 320px)/1120));margin-right:30px}.extra-item{margin-left:16px;font-size:12px;margin-bottom:10px}.extra-item::before{content:"";margin-right:10px;display:inline-block;vertical-align:middle}.extra-item-1::before{background:url(../img/svg/extra-img-1.svg) center center/cover no-repeat;width:16px;height:16px}.extra-item-2::before{background:url(../img/svg/extra-img-2.svg) center center/cover no-repeat;width:16px;height:16px}.extra-item-3::before{background:url(../img/svg/extra-img-3.svg) center center/cover no-repeat;width:32px;height:16px}.extra-item-4::before{background:url(../img/svg/extra-img-4.svg) center center/cover no-repeat;width:10px;height:16px}input:focus,select:focus,textarea:focus{outline:0}.show{opacity:1;-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);-webkit-transition:all 1s;-o-transition:all 1s;transition:all 1s}.header{background:#000;position:fixed;width:100%;z-index:1}.header__container{padding-top:20px;padding-bottom:20px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__nav.menu-opened{background:#000;-webkit-transition:all .3s ease-in,background .5s ease-in;-o-transition:all .3s ease-in,background .5s ease-in;transition:all .3s ease-in,background .5s ease-in;-webkit-transition-delay:.25s;-o-transition-delay:.25s;transition-delay:.25s;-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}.header__nav.menu-opened .header__nav-item{width:100%;-webkit-transform:scale(1) translateY(0);-ms-transform:scale(1) translateY(0);transform:scale(1) translateY(0);opacity:1}.header__nav.menu-opened .header__nav-item:nth-child(1){-webkit-transition-delay:.27s;-o-transition-delay:.27s;transition-delay:.27s}.header__nav.menu-opened .header__nav-item:nth-child(2){-webkit-transition-delay:.34s;-o-transition-delay:.34s;transition-delay:.34s}.header__nav.menu-opened .header__nav-item:nth-child(3){-webkit-transition-delay:.41s;-o-transition-delay:.41s;transition-delay:.41s}.header__nav.menu-opened .header__nav-item:nth-child(4){-webkit-transition-delay:.48s;-o-transition-delay:.48s;transition-delay:.48s}.header__nav.menu-opened .header__nav-item:nth-child(5){-webkit-transition-delay:.55s;-o-transition-delay:.55s;transition-delay:.55s}.header__nav.menu-opened~.header__burger-container{-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.header__nav.menu-opened~.header__burger-container .burger .burger-bar{-webkit-transition:all .4s cubic-bezier(.4,.01,.165,.99);-o-transition:all .4s cubic-bezier(.4,.01,.165,.99);transition:all .4s cubic-bezier(.4,.01,.165,.99);-webkit-transition-delay:.2s;-o-transition-delay:.2s;transition-delay:.2s}.header__nav.menu-opened~.header__burger-container .burger .burger-bar.topBar{-webkit-transform:translateY(4px) rotate(45deg);-ms-transform:translateY(4px) rotate(45deg);transform:translateY(4px) rotate(45deg)}.header__nav.menu-opened~.header__burger-container .burger .burger-bar.btmBar{-webkit-transform:translateY(3px) rotate(-45deg);-ms-transform:translateY(3px) rotate(-45deg);transform:translateY(3px) rotate(-45deg)}.header__nav-list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:30px}.header__nav-item:last-child .header__nav-link{background:#fff;padding:10px 15px;color:#000;border-radius:10px;margin-right:15px}.header__nav-link{color:#fff}.header__burger-container{display:none}.burger,.burger-bar{display:block;position:relative}.burger{width:40px;height:8px;margin:-4px auto 0;top:50%}.burger-bar{width:100%;height:2px;background:#fff;-webkit-transition:all .3s cubic-bezier(.4,.01,.165,.99);-o-transition:all .3s cubic-bezier(.4,.01,.165,.99);transition:all .3s cubic-bezier(.4,.01,.165,.99);-webkit-transition-delay:0s;-o-transition-delay:0s;transition-delay:0s}.burger-bar.topBar{-webkit-transform:translateY(0) rotate(0deg);-ms-transform:translateY(0) rotate(0deg);transform:translateY(0) rotate(0deg)}.burger-bar.btmBar{-webkit-transform:translateY(6px) rotate(0deg);-ms-transform:translateY(6px) rotate(0deg);transform:translateY(6px) rotate(0deg)}.hero{height:100vh;position:relative}.hero__img{position:absolute;left:0;top:0;width:100%;height:100%;-o-object-fit:cover;object-fit:cover;-o-object-position:center;object-position:center}.hero__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;padding-bottom:100px}.hero__subtitle{margin-bottom:1px;text-transform:uppercase}.hero__title{margin-bottom:18px}.hero__desc{color:silver;margin-bottom:14px;max-width:50%;text-align:center}.what-we-do{background:center center/cover no-repeat #000;padding-top:120px;padding-bottom:100px}.what-we-do__title{margin-bottom:15px}.what-we-do__subtitle{margin-bottom:40px}.card__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:16px;margin-right:-16px}.card__item{height:100%;-webkit-box-flex:1;-ms-flex:1 1 calc(50% - 15px);flex:1 1 calc(50% - 15px)}.card__item:nth-child(2n){margin-right:0}.card__item-pic{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;position:relative}.card__item-img{width:100%}.card__item-caption{position:absolute;bottom:15%;left:0;width:100%;padding:20px}.card__item-title{margin-bottom:20px}.card__item-desc{color:silver}.card__item-readmo{position:absolute;bottom:5%;left:20px;width:143px;padding:8px;background:#fff;border-radius:14px}.card__item-link,.card__item-link::before{display:inline-block;-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.card__item-link{position:relative;padding:6px 0 6px 40px}.card__item-link:hover{width:100%;color:#fff;z-index:1}.card__item-link::before{content:"";border-radius:45%;width:35px;height:35px;background:#000;margin:0 10px 0 auto;vertical-align:middle;position:absolute;left:0;bottom:-2px}.card__item-link:hover::before{min-width:80%;background:#000;margin-right:0;left:19%;border-radius:10px;z-index:-1}.gear-cage{display:-ms-grid;display:grid;-ms-grid-columns:(50%)[2];grid-template-columns:repeat(2,50%)}.gear-cage__box{height:600px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.gear-cage__box>.gear-cage__desc,.gear-cage__box>.gear-cage__subtitle,.gear-cage__box>.gear-cage__title{margin-left:calc(20px + 1030*((100vw - 320px)/1120));margin-right:30px;margin-bottom:10px}.gear-cage__box>.card__item-readmo{position:initial}.gear-cage__box:first-child,.gear-cage__box:nth-child(4){-ms-grid-column:1;-ms-grid-column-span:2;grid-column:1/span 2}.gear-cage__box:first-child{background:url(../img/gear-cage-1.jpg) center center/cover no-repeat fixed #000}.gear-cage__box:nth-child(2){background:center center/cover no-repeat fixed #000;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;padding-right:calc(20px + 80*((100vw - 320px)/1120));padding-left:calc(20px + 80*((100vw - 320px)/1120))}.gear-cage__box:nth-child(2)>.gear-cage__desc,.gear-cage__box:nth-child(2)>.gear-cage__subtitle,.gear-cage__box:nth-child(2)>.gear-cage__title{margin-left:0;margin-right:0;padding:0}.gear-cage__box:nth-child(2)>.gear-cage__subtitle{color:silver;letter-spacing:2px}.gear-cage__box:nth-child(2)>.gear-cage__title{font-size:28px;color:#fff}.gear-cage__box:nth-child(2)>.gear-cage__desc{color:#fff;margin-bottom:20px}.gear-cage__box:nth-child(3){background:url(../img/gear-cage-3.jpg) center center/cover no-repeat #000}.gear-cage__box:nth-child(3)>.extra-list{margin-left:calc(20px + 380*((100vw - 320px)/1120))}.gear-cage__box:nth-child(4){background:url(../img/gear-cage-4.jpg) center center/cover no-repeat fixed #000}.gear-cage__title{text-align:left}.gear-cage__desc{color:silver}.gear-cage__box>.extra-list{margin-top:200px;margin-bottom:40px}.clients{background:#000;padding:120px}.clients__title{margin-bottom:15px}.clients__subtitle{margin-bottom:80px}.clients__logos{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:109px}.clients__logos-img{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%);opacity:0;-webkit-transition-delay:.5s;-o-transition-delay:.5s;transition-delay:.5s}.clients__logos-img.show{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1}.himalayas__box{background:url(../img/himalayas.jpg) center center/cover no-repeat fixed #000}.help{background:#000;padding:110px 0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.help__title{margin-bottom:20px;max-width:570px}.help__subtitle{margin-bottom:25px}.help .card__item-readmo{position:initial;width:154px}.contact{background:#000;padding:100px 0 80px}.contact__links-area,.contact__links-box{display:-webkit-box;display:-ms-flexbox;display:flex}.contact__links-area{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.contact__links-area a.logo-link img{margin:0 auto}.contact__links-logobox .logo{margin-bottom:20px}.contact__links-box{gap:20px;margin-right:100px}.contact__links-business{margin-right:40px}.contact__links-title{margin-bottom:1rem;color:silver}.contact__links-item{margin-bottom:1rem}.contact__links-item a{color:#fff;-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s}.contact__links-item a:focus,.contact__links-item a:hover{color:silver}.contact__subscribe-area{display:-webkit-box;display:-ms-flexbox;display:flex;margin:70px 0;border:1px solid #fff;border-width:2px 0;padding:40px 0;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.contact__subscribe-title{margin-bottom:20px}.contact__subscribe-input-area{width:458px;padding:0 6px;background:#f9fafb;border-radius:12px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.contact__subscribe-input-area::after{background:#000;border-radius:11px;width:64px;height:30px;content:""}.contact__subscribe-input{color:#000;display:inline-block;position:relative;padding:10px;width:100%;margin-right:10px;border:0}.contact__social-aria{color:silver;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.contact__social-link{margin-right:20px}.contact__social-svg{width:24px;height:24px;fill:silver;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.contact__social-svg:focus,.contact__social-svg:hover{fill:#fff;stroke:#00f;-webkit-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2)}@media (max-width:1200px){body{line-height:calc(16px + 4*((100vw - 320px)/880))}h2{font-size:calc(30px + 10*((100vw - 320px)/880))}body,p{font-size:calc(10px + 4*((100vw - 320px)/880))}.what-we-do{padding-top:calc(80px + 40*((100vw - 320px)/880));padding-bottom:calc(80px + 20*((100vw - 320px)/880))}.clients{padding:calc(80px + 40*((100vw - 320px)/880))}.clients__logos{gap:calc(60px + 49*((100vw - 320px)/880))}.help{padding-top:calc(100px + 10*((100vw - 320px)/880));padding-bottom:calc(100px + 10*((100vw - 320px)/880))}.contact{padding-top:calc(0px + 100*((100vw - 320px)/880));padding-bottom:calc(30px + 50*((100vw - 320px)/880))}.contact__subscribe-area{margin-top:calc(10px + 60*((100vw - 320px)/880));margin-bottom:calc(10px + 60*((100vw - 320px)/880))}}@media (max-width:800px){.extra-list{margin-left:calc(20px + 380*((100vw - 320px)/1120))}.header__container{height:90px}.header__nav{position:fixed;top:0;left:0;width:100%;height:100%;padding:75px;-webkit-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%);-webkit-transition:all .3s linear,background .5s ease-in;-o-transition:all .3s linear,background .5s ease-in;transition:all .3s linear,background .5s ease-in}.header__nav-list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;padding:0 48px;list-style:none;gap:0}.header__nav-item{padding-top:20px;padding-bottom:20px;border-top:1px solid silver;margin-top:5px;-webkit-transform:scale(1.15) translateY(-30px);-ms-transform:scale(1.15) translateY(-30px);transform:scale(1.15) translateY(-30px);opacity:0;-webkit-transition:opacity .6s cubic-bezier(.4,.01,.165,.99),-webkit-transform .5s cubic-bezier(.4,.01,.165,.99);-o-transition:transform .5s cubic-bezier(.4,.01,.165,.99),opacity .6s cubic-bezier(.4,.01,.165,.99);transition:transform .5s cubic-bezier(.4,.01,.165,.99),opacity .6s cubic-bezier(.4,.01,.165,.99);transition:transform .5s cubic-bezier(.4,.01,.165,.99),opacity .6s cubic-bezier(.4,.01,.165,.99),-webkit-transform .5s cubic-bezier(.4,.01,.165,.99)}.header__nav-item:nth-child(1){-webkit-transition-delay:.49s;-o-transition-delay:.49s;transition-delay:.49s}.header__nav-item:nth-child(2){-webkit-transition-delay:.42s;-o-transition-delay:.42s;transition-delay:.42s}.header__nav-item:nth-child(3){-webkit-transition-delay:.35s;-o-transition-delay:.35s;transition-delay:.35s}.header__nav-item:nth-child(4){-webkit-transition-delay:.28s;-o-transition-delay:.28s;transition-delay:.28s}.header__nav-item:nth-child(5){-webkit-transition-delay:.21s;-o-transition-delay:.21s;transition-delay:.21s}.header__nav-link{display:block;position:relative;color:#fff;text-decoration:none;font-size:22px;line-height:2.35;font-weight:200;width:100%}.header__burger-container{position:relative;display:inline-block;height:50px;width:50px;cursor:pointer;-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);-webkit-transition:all .3s cubic-bezier(.4,.01,.165,.99);-o-transition:all .3s cubic-bezier(.4,.01,.165,.99);transition:all .3s cubic-bezier(.4,.01,.165,.99);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}.hero__desc{max-width:80%;margin-bottom:20px}.card__list{margin-right:0}.card__item{-webkit-box-flex:1;-ms-flex:1 1 calc(100% - 15px);flex:1 1 calc(100% - 15px)}.gear-cage__box>.gear-cage__desc,.gear-cage__box>.gear-cage__subtitle,.gear-cage__box>.gear-cage__title{margin-left:auto;margin-right:auto;padding:0 15px}.gear-cage__box>.extra-list{margin-left:auto;margin-right:auto}.gear-cage__box:nth-child(2),.gear-cage__box:nth-child(3){-ms-grid-column:1;-ms-grid-column-span:2;grid-column:1/span 2}.contact__links-area{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.contact__links-logobox{margin-bottom:30px}.contact__links-logobox .logo{margin-bottom:10px}.contact__links-box{margin-bottom:10px;margin-right:0}.contact__subscribe-area{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.contact__subscribe-title{margin-bottom:10px}.contact__subscribe-text{margin-bottom:20px}.contact__subscribe-input-area{width:90%}.contact__social-aria{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.contact__social-aria .contact__social-links{margin:20px}}@media (prefers-reduced-motion:reduce){*{-webkit-animation-duration:.01ms!important;animation-duration:.01ms!important;-webkit-animation-iteration-count:1!important;animation-iteration-count:1!important;-webkit-transition-duration:.01ms!important;-o-transition-duration:.01ms!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}@supports (-webkit-appearance:none){.extra-item-1::before{background:url(../img/svg/extra-img-1.svg) center center/cover no-repeat}.extra-item-2::before{background:url(../img/svg/extra-img-2.svg) center center/cover no-repeat}.extra-item-3::before{background:url(../img/svg/extra-img-3.svg) center center/cover no-repeat}.extra-item-4::before{background:url(../img/svg/extra-img-4.svg) center center/cover no-repeat}.gear-cage__box:first-child{background:url(../img/gear-cage-1.webp) center center/cover no-repeat fixed #000}.gear-cage__box:nth-child(3){background:url(../img/gear-cage-3.webp) center center/cover no-repeat #000}.gear-cage__box:nth-child(4){background:url(../img/gear-cage-4.webp) center center/cover no-repeat fixed #000}.himalayas__box{background:url(../img/himalayas.webp) center center/cover no-repeat fixed #000}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */