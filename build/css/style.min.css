@charset "UTF-8";html{-webkit-box-sizing:border-box;box-sizing:border-box;scroll-behavior:smooth}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol[class],ul[class]{padding:0}blockquote,body,dd,dl,figcaption,figure,h1,h2,h3,h4,li,ol[class],p{margin:0}body{padding:0;min-height:100vh;scroll-behavior:smooth;-webkit-transition:all .5s linear 0s;-o-transition:all .5s linear 0s;transition:all .5s linear 0s;text-rendering:optimizeSpeed;line-height:1.5;font:400 14px/20px "Poppins",sans-serif;color:#fff}ol[class],ul[class]{list-style:none}a{text-decoration:none}a:not([class]){-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto}img{max-width:100%;height:auto;display:block}article>*+*{margin-top:1em}button,input,select,textarea{font:inherit}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:"Poppins";font-style:normal;font-weight:400;src:local(""),url(/font/poppins-v20-latin-regular.woff2) format("woff2"),url(/font/poppins-v20-latin-regular.woff) format("woff")}.container{max-width:1200px;width:100%;padding:0 15px;margin:0 auto}h1,h2,h3{text-align:center}h1{font-size:calc(40px + 14*((100vw - 320px)/1120));line-height:59px}h2{font-size:calc(30px + 10*((100vw - 320px)/1120));line-height:42px}h3{font-size:calc(16px + 7*((100vw - 320px)/1120));line-height:30px;color:silver;font-weight:400}h4{letter-spacing:2px;text-transform:uppercase}p{font-size:14px}.extra-list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-item-align:start;align-self:flex-start;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;margin-left:calc(20px + 1030*((100vw - 320px)/1120));margin-right:30px}.extra-item{margin-left:16px;font-size:12px}.extra-item::before{content:"";margin-right:10px;display:inline-block;vertical-align:middle}.extra-item-1::before{background:url(/img/svg/extra-img-1.svg) center center/cover no-repeat;width:16px;height:16px}.extra-item-2::before{background:url(/img/svg/extra-img-2.svg) center center/cover no-repeat;width:16px;height:16px}.extra-item-3::before{background:url(/img/svg/extra-img-3.svg) center center/cover no-repeat;width:32px;height:16px}.extra-item-4::before{background:url(/img/svg/extra-img-4.svg) center center/cover no-repeat;width:10px;height:16px}input:focus,select:focus,textarea:focus{outline:0}.header{background:#181818;position:fixed;top:0;left:0;width:100%;z-index:3}.header__container,.header__nav-list{display:-webkit-box;display:-ms-flexbox;display:flex}.header__container{padding-top:20px;padding-bottom:20px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__nav-list{-ms-flex-wrap:wrap;flex-wrap:wrap;gap:30px}.header__nav-item:last-child .header__nav-link{background:#fff;padding:10px 15px;color:#000;border-radius:10px;margin-right:15px}.header__nav-link{color:#fff}.header__burger{display:-webkit-box;display:-ms-flexbox;display:flex;display:none;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:30px;height:30px;gap:5px;cursor:pointer;overflow:hidden}.burger__line{background:#fff;width:24px;border:solid 1px #fff;-webkit-transition:all .5s;-o-transition:all .5s;transition:all .5s}.burger__line-middle{width:18px}.hero{background:url(../img/hero_img.jpg) center center/cover no-repeat fixed #000;height:calc(100vh - 70px);padding-bottom:80px;margin-top:70px}.hero__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%}.hero__subtitle{margin-bottom:1px}.hero__title{margin-bottom:18px}.hero__desc{color:silver;margin-bottom:14px;max-width:50%;text-align:center}.what-we-do{background:center center/cover no-repeat #000;padding-top:120px;padding-bottom:100px}.what-we-do__title{margin-bottom:15px}.what-we-do__subtitle{margin-bottom:40px}.card__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:16px;margin-right:-16px}.card__item{width:100%;height:100%;-webkit-box-flex:1;-ms-flex:1 1 calc(50% - 8px);flex:1 1 calc(50% - 8px)}.card__item:nth-child(2n){margin-right:0}.card__item-pic{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;position:relative}.card__item-img{width:100%}.card__item-caption{position:absolute;bottom:15%;left:0;width:100%;padding:20px}.card__item-title{margin-bottom:20px}.card__item-desc{color:silver}.card__item-readmo{position:absolute;bottom:5%;left:20px;width:143px;padding:8px;background:#fff;border-radius:14px}.card__item-link,.card__item-link::before{display:inline-block;-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.card__item-link{position:relative;padding:6px 0 6px 40px}.card__item-link:hover{width:100%;color:#fff;z-index:1}.card__item-link::before{content:"";border-radius:45%;width:35px;height:35px;background:#000;margin:0 10px 0 auto;vertical-align:middle;position:absolute;left:0;bottom:-2px}.card__item-link:hover::before{min-width:80%;background:#000;margin-right:0;left:19%;border-radius:10px;z-index:-1}.gear-cage{display:-ms-grid;display:grid;-ms-grid-columns:(50%)[2];grid-template-columns:repeat(2,50%)}.gear-cage__box{height:600px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.gear-cage__box>.gear-cage__desc,.gear-cage__box>.gear-cage__subtitle,.gear-cage__box>.gear-cage__title{margin-left:calc(20px + 1030*((100vw - 320px)/1120));margin-right:30px;margin-bottom:10px}.gear-cage__box>.card__item-readmo{position:initial}.gear-cage__box:first-child,.gear-cage__box:nth-child(4){-ms-grid-column:1;-ms-grid-column-span:2;grid-column:1/span 2}.gear-cage__box:first-child{background:url(../img/gear-cage-1.jpg) center center/cover no-repeat fixed #000}.gear-cage__box:nth-child(2){background:center center/cover no-repeat fixed #000;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;padding-right:calc(20px + 80*((100vw - 320px)/1120));padding-left:calc(20px + 80*((100vw - 320px)/1120))}.gear-cage__box:nth-child(2)>.gear-cage__desc,.gear-cage__box:nth-child(2)>.gear-cage__subtitle,.gear-cage__box:nth-child(2)>.gear-cage__title{margin-left:0;margin-right:0}.gear-cage__box:nth-child(2)>.gear-cage__subtitle{color:silver;letter-spacing:2px}.gear-cage__box:nth-child(2)>.gear-cage__title{font-size:28px;color:#fff}.gear-cage__box:nth-child(2)>.gear-cage__desc{color:#fff;margin-bottom:20px}.gear-cage__box:nth-child(3){background:url(../img/gear-cage-3.jpg) center center/cover no-repeat #000}.gear-cage__box:nth-child(3)>.extra-list{margin-left:calc(20px + 380*((100vw - 320px)/1120))}.gear-cage__box:nth-child(4){background:url(../img/gear-cage-4.jpg) center center/cover no-repeat fixed #000}.gear-cage__title{text-align:left}.gear-cage__desc{color:silver}.gear-cage__box>.extra-list{margin-top:200px;margin-bottom:40px}.clients{background:#000;padding:120px}.clients__title{margin-bottom:15px}.clients__subtitle{margin-bottom:80px}.clients__logos{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:109px}.himalayas__box{background:url(../img/himalayas.jpg) center center/cover no-repeat fixed #000}.help{background:#000;padding:110px 0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.help__title{margin-bottom:20px;max-width:570px}.help__subtitle{margin-bottom:25px}.help .card__item-readmo{position:initial;width:154px}.contact{background:#000;padding:100px 0 80px}.contact__links-area,.contact__links-box{display:-webkit-box;display:-ms-flexbox;display:flex}.contact__links-area{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.contact__links-logobox .logo{margin-bottom:20px}.contact__links-box{gap:20px;margin-right:100px}.contact__links-business{margin-right:40px}.contact__links-links,.contact__links-title{margin-bottom:1rem}.contact__subscribe-area{display:-webkit-box;display:-ms-flexbox;display:flex;margin:70px 0;border:1px solid #fff;border-width:2px 0;padding:40px 0;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.contact__subscribe-title{margin-bottom:20px}.contact__subscribe-input-area{width:458px;padding:0 6px;background:#f9fafb;border-radius:12px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.contact__subscribe-input-area::after{background:#000;border-radius:11px;width:64px;height:30px;content:""}.contact__subscribe-input{color:#000;display:inline-block;position:relative;padding:10px;width:100%;margin-right:10px;border:0}.contact__social-aria{color:silver;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.contact__social-link{margin-right:20px}.contact__social-svg{width:24px;height:24px;fill:silver;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.contact__social-svg:focus,.contact__social-svg:hover{fill:#fff;stroke:#00f;-webkit-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2)}@media (max-width:1200px){body{line-height:calc(16px + 4*((100vw - 320px)/880))}body,p{font-size:calc(10px + 4*((100vw - 320px)/880))}.what-we-do{padding-top:calc(80px + 40*((100vw - 320px)/880));padding-bottom:calc(80px + 20*((100vw - 320px)/880))}.clients{padding:calc(80px + 40*((100vw - 320px)/880))}}@media (prefers-reduced-motion:reduce){*{-webkit-animation-duration:.01ms!important;animation-duration:.01ms!important;-webkit-animation-iteration-count:1!important;animation-iteration-count:1!important;-webkit-transition-duration:.01ms!important;-o-transition-duration:.01ms!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}@supports (-webkit-appearance:none){.extra-item-1::before{background:url(/img/svg/extra-img-1.svg) center center/cover no-repeat}.extra-item-2::before{background:url(/img/svg/extra-img-2.svg) center center/cover no-repeat}.extra-item-3::before{background:url(/img/svg/extra-img-3.svg) center center/cover no-repeat}.extra-item-4::before{background:url(/img/svg/extra-img-4.svg) center center/cover no-repeat}.hero{background:url(../img/hero_img.webp) center center/cover no-repeat fixed #000}.gear-cage__box:first-child{background:url(../img/gear-cage-1.webp) center center/cover no-repeat fixed #000}.gear-cage__box:nth-child(3){background:url(../img/gear-cage-3.webp) center center/cover no-repeat #000}.gear-cage__box:nth-child(4){background:url(../img/gear-cage-4.webp) center center/cover no-repeat fixed #000}.himalayas__box{background:url(../img/himalayas.webp) center center/cover no-repeat fixed #000}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */